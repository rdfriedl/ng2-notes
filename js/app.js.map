{"version":3,"sources":["webpack:///js/app.js","webpack:///./src/app/services/index.ts","webpack:///./src/app/about/about.component.ts","webpack:///./src/app/edit-note/edit-note.component.ts","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/note-form/note-form.component.ts","webpack:///./~/markdown-to-html-pipe/src/markdown-to-html.pipe.js","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/services/note.service.ts","webpack:///./README.md","webpack:///./~/markdown-to-html-pipe/index.js","webpack:///./~/marked/lib/marked.js","webpack:///./src/app/app.component.scss","webpack:///./src/app/about/about.component.html","webpack:///./src/app/app.component.html","webpack:///./src/app/edit-note/edit-note.component.html","webpack:///./src/app/home/home.component.html","webpack:///./src/app/note-form/note-form.component.html","webpack:///external \"Dexie\"","webpack:///external \"ng.forms\"","webpack:///./src/main.ts"],"names":["webpackJsonp","module","exports","__webpack_require__","__export","m","p","hasOwnProperty","core_1","AboutComponent","this","README","prototype","ngOnInit","console","log","__decorate","Component","selector","template","__metadata","router_1","services_1","EditNoteComponent","noteService","route","router","note","Note","modal","mobilePreview","_this","params","map","getNote","subscribe","update","saveNote","updateNote","getNoteID","then","navigate","toggleMobilePreview","NoteService","ActivatedRoute","Router","HomeComponent","selected","Object","defineProperty","get","Array","from","notes","v","enumerable","configurable","setSelected","includes","push","splice","indexOf","toggleSelected","clearSelection","length","deleteNotes","Promise","all","deleteNote","filter","catch","editNote","NoteFormComponent","loading","createNote","finally","marked","MarkdownToHtmlPipe","transform","markdown","options","setOptions","decorators","type","Pipe","args","name","ctorParameters","platform_browser_1","http_1","forms_1","markdown_to_html_pipe_1","app_component_1","home_component_1","note_form_component_1","edit_note_component_1","about_component_1","app_routing_1","hmr_1","AppModule","appRef","hmrOnInit","store","hmrOnDestroy","cmpLocation","components","cmp","location","nativeElement","disposeOldHosts","createNewHosts","removeNgStyles","hmrAfterDestroy","NgModule","imports","BrowserModule","HttpModule","FormsModule","routing","declarations","AppComponent","providers","bootstrap","ApplicationRef","styles","routes","path","component","RouterModule","forRoot","useHash","dexie_1","Map","db","default","version","stores","loadNotes","size","content","done","title","table","toArray","entries","forEach","data","set","id","hasNote","has","entry","next","value","delete","reject","Error","put","Injectable","created","Date","updated","undefined","markdown_to_html_pipe_2","MarkdownToHtmlModule","global","Lexer","tokens","links","defaults","rules","block","normal","gfm","tables","InlineLexer","inline","renderer","Renderer","breaks","pedantic","Parser","token","escape","html","encode","replace","unescape","_","n","toLowerCase","charAt","String","fromCharCode","parseInt","substring","regex","opt","source","self","val","RegExp","noop","merge","obj","target","key","i","arguments","call","src","callback","pending","highlight","lex","e","err","out","parse","text","lang","code","escaped","message","silent","newline","fences","hr","heading","nptable","lheading","blockquote","list","def","paragraph","bullet","item","_tag","lexer","top","bq","loose","cap","bull","b","space","l","exec","depth","header","split","align","cells","test","ordered","match","smartLists","slice","join","sanitize","pre","sanitizer","href","charCodeAt","autolink","url","tag","link","reflink","nolink","strong","em","br","del","_inside","_href","output","mangle","inLink","outputLink","codespan","smartypants","image","ch","Math","random","toString","langPrefix","quote","level","raw","headerPrefix","xhtml","body","listitem","tablerow","tablecell","flags","prot","decodeURIComponent","parser","reverse","tok","pop","peek","parseText","row","cell","j","inlineLexer","window","Dexie","ng","forms","main","platform_browser_dynamic_1","platformBrowserDynamic","bootstrapModule","app_module_1","MODULE_REF","enableProdMode","document","readyState","addEventListener"],"mappings":"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","file":"js/app.js","sourcesContent":["webpackJsonp([0],[\n/* 0 */,\n/* 1 */,\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n__export(__webpack_require__(26));\r\n\n\n/***/ },\n/* 3 */,\n/* 4 */,\n/* 5 */,\n/* 6 */,\n/* 7 */,\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\r\nvar core_1 = __webpack_require__(0);\r\nvar AboutComponent = (function () {\r\n    function AboutComponent() {\r\n        this.README = __webpack_require__(27);\r\n        // Do stuff\r\n    }\r\n    AboutComponent.prototype.ngOnInit = function () {\r\n        console.log('Hello About');\r\n    };\r\n    AboutComponent = __decorate([\r\n        core_1.Component({\r\n            selector: 'my-about',\r\n            template: __webpack_require__(32)\r\n        }), \r\n        __metadata('design:paramtypes', [])\r\n    ], AboutComponent);\r\n    return AboutComponent;\r\n}());\r\nexports.AboutComponent = AboutComponent;\r\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\r\nvar core_1 = __webpack_require__(0);\r\nvar router_1 = __webpack_require__(1);\r\nvar services_1 = __webpack_require__(2);\r\nvar EditNoteComponent = (function () {\r\n    function EditNoteComponent(noteService, route, router) {\r\n        this.noteService = noteService;\r\n        this.route = route;\r\n        this.router = router;\r\n        this.note = new services_1.Note();\r\n        this.modal = new services_1.Note();\r\n        this.mobilePreview = false;\r\n    }\r\n    EditNoteComponent.prototype.ngOnInit = function () {\r\n        var _this = this;\r\n        this.route.params\r\n            .map(function (params) { return _this.noteService.getNote(+params['id']); })\r\n            .subscribe(function (note) {\r\n            _this.note = note;\r\n            _this.modal.update(note);\r\n        });\r\n    };\r\n    EditNoteComponent.prototype.saveNote = function () {\r\n        var _this = this;\r\n        this.noteService.updateNote(this.noteService.getNoteID(this.note), this.modal)\r\n            .then(function () { return _this.router.navigate(['/']); });\r\n    };\r\n    EditNoteComponent.prototype.toggleMobilePreview = function () {\r\n        this.mobilePreview = !this.mobilePreview;\r\n    };\r\n    EditNoteComponent = __decorate([\r\n        core_1.Component({\r\n            selector: 'my-edit-note',\r\n            template: __webpack_require__(34)\r\n        }), \r\n        __metadata('design:paramtypes', [services_1.NoteService, router_1.ActivatedRoute, router_1.Router])\r\n    ], EditNoteComponent);\r\n    return EditNoteComponent;\r\n}());\r\nexports.EditNoteComponent = EditNoteComponent;\r\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\r\nvar core_1 = __webpack_require__(0);\r\nvar router_1 = __webpack_require__(1);\r\nvar services_1 = __webpack_require__(2);\r\nvar HomeComponent = (function () {\r\n    function HomeComponent(noteService, router) {\r\n        this.noteService = noteService;\r\n        this.router = router;\r\n        this.selected = [];\r\n    }\r\n    Object.defineProperty(HomeComponent.prototype, \"notes\", {\r\n        get: function () {\r\n            return Array.from(this.noteService.notes).map(function (v) { return v[1]; });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ;\r\n    HomeComponent.prototype.setSelected = function (note, selected) {\r\n        if (selected === void 0) { selected = true; }\r\n        if (selected) {\r\n            if (!this.selected.includes(note)) {\r\n                this.selected.push(note);\r\n            }\r\n        }\r\n        else {\r\n            if (this.selected.includes(note)) {\r\n                this.selected.splice(this.selected.indexOf(note), 1);\r\n            }\r\n        }\r\n    };\r\n    HomeComponent.prototype.toggleSelected = function (note) {\r\n        this.setSelected(note, !this.selected.includes(note));\r\n    };\r\n    HomeComponent.prototype.clearSelection = function () {\r\n        this.selected.length = 0;\r\n    };\r\n    HomeComponent.prototype.deleteNotes = function (notes) {\r\n        var _this = this;\r\n        Promise.all(notes.map(function (note) { return _this.noteService.deleteNote(_this.noteService.getNoteID(note)); })).then(function () {\r\n            _this.selected = _this.selected.filter(function (note) { return !notes.includes(note); });\r\n        }).catch(function () {\r\n            // error\r\n            _this.clearSelection();\r\n        });\r\n    };\r\n    HomeComponent.prototype.editNote = function (note) {\r\n        this.router.navigate(['/edit', this.noteService.getNoteID(note)]);\r\n    };\r\n    HomeComponent = __decorate([\r\n        core_1.Component({\r\n            selector: 'my-home',\r\n            template: __webpack_require__(35)\r\n        }), \r\n        __metadata('design:paramtypes', [services_1.NoteService, router_1.Router])\r\n    ], HomeComponent);\r\n    return HomeComponent;\r\n}());\r\nexports.HomeComponent = HomeComponent;\r\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\r\nvar core_1 = __webpack_require__(0);\r\nvar router_1 = __webpack_require__(1);\r\nvar services_1 = __webpack_require__(2);\r\nvar NoteFormComponent = (function () {\r\n    function NoteFormComponent(noteService, router) {\r\n        this.noteService = noteService;\r\n        this.router = router;\r\n        this.loading = false;\r\n        this.mobilePreview = false;\r\n        this.note = new services_1.Note();\r\n    }\r\n    NoteFormComponent.prototype.createNote = function () {\r\n        var _this = this;\r\n        this.loading = true;\r\n        this.noteService.createNote(this.note)\r\n            .finally(function () { return _this.loading = false; })\r\n            .then(function () { return _this.router.navigate(['/']); });\r\n    };\r\n    NoteFormComponent.prototype.toggleMobilePreview = function () {\r\n        this.mobilePreview = !this.mobilePreview;\r\n    };\r\n    NoteFormComponent = __decorate([\r\n        core_1.Component({\r\n            selector: 'my-note-form',\r\n            template: __webpack_require__(36)\r\n        }), \r\n        __metadata('design:paramtypes', [services_1.NoteService, router_1.Router])\r\n    ], NoteFormComponent);\r\n    return NoteFormComponent;\r\n}());\r\nexports.NoteFormComponent = NoteFormComponent;\r\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nvar core_1 = __webpack_require__(0);\nvar marked = __webpack_require__(29);\nvar MarkdownToHtmlPipe = (function () {\n    function MarkdownToHtmlPipe() {\n    }\n    MarkdownToHtmlPipe.prototype.transform = function (markdown, options) {\n        if (markdown == null)\n            return '';\n        return marked(markdown, options);\n    };\n    MarkdownToHtmlPipe.setOptions = function (options) {\n        marked.setOptions(options);\n    };\n    MarkdownToHtmlPipe.decorators = [\n        { type: core_1.Pipe, args: [{\n                    name: 'MarkdownToHtml'\n                },] },\n    ];\n    /** @nocollapse */\n    MarkdownToHtmlPipe.ctorParameters = [];\n    return MarkdownToHtmlPipe;\n}());\nexports.MarkdownToHtmlPipe = MarkdownToHtmlPipe;\n//# sourceMappingURL=markdown-to-html.pipe.js.map\n\n/***/ },\n/* 13 */,\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\r\nvar core_1 = __webpack_require__(0);\r\nvar platform_browser_1 = __webpack_require__(7);\r\nvar http_1 = __webpack_require__(6);\r\nvar forms_1 = __webpack_require__(39);\r\nvar markdown_to_html_pipe_1 = __webpack_require__(28);\r\nvar app_component_1 = __webpack_require__(24);\r\nvar home_component_1 = __webpack_require__(10);\r\nvar note_form_component_1 = __webpack_require__(11);\r\nvar edit_note_component_1 = __webpack_require__(9);\r\nvar about_component_1 = __webpack_require__(8);\r\nvar services_1 = __webpack_require__(2);\r\nvar app_routing_1 = __webpack_require__(25);\r\nvar hmr_1 = __webpack_require__(5);\r\nvar AppModule = (function () {\r\n    function AppModule(appRef) {\r\n        this.appRef = appRef;\r\n    }\r\n    AppModule.prototype.hmrOnInit = function (store) {\r\n        console.log('HMR store', store);\r\n    };\r\n    AppModule.prototype.hmrOnDestroy = function (store) {\r\n        var cmpLocation = this.appRef.components.map(function (cmp) { return cmp.location.nativeElement; });\r\n        // recreate elements\r\n        store.disposeOldHosts = hmr_1.createNewHosts(cmpLocation);\r\n        // remove styles\r\n        hmr_1.removeNgStyles();\r\n    };\r\n    AppModule.prototype.hmrAfterDestroy = function (store) {\r\n        // display new elements\r\n        store.disposeOldHosts();\r\n        delete store.disposeOldHosts;\r\n    };\r\n    AppModule = __decorate([\r\n        core_1.NgModule({\r\n            imports: [\r\n                platform_browser_1.BrowserModule,\r\n                http_1.HttpModule,\r\n                forms_1.FormsModule,\r\n                app_routing_1.routing\r\n            ],\r\n            declarations: [\r\n                app_component_1.AppComponent,\r\n                home_component_1.HomeComponent,\r\n                about_component_1.AboutComponent,\r\n                note_form_component_1.NoteFormComponent,\r\n                edit_note_component_1.EditNoteComponent,\r\n                markdown_to_html_pipe_1.MarkdownToHtmlPipe\r\n            ],\r\n            providers: [\r\n                services_1.NoteService\r\n            ],\r\n            bootstrap: [app_component_1.AppComponent]\r\n        }), \r\n        __metadata('design:paramtypes', [core_1.ApplicationRef])\r\n    ], AppModule);\r\n    return AppModule;\r\n}());\r\nexports.AppModule = AppModule;\r\n\n\n/***/ },\n/* 15 */,\n/* 16 */\n/***/ function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 17 */,\n/* 18 */,\n/* 19 */,\n/* 20 */,\n/* 21 */,\n/* 22 */,\n/* 23 */,\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\r\nvar core_1 = __webpack_require__(0);\r\nvar router_1 = __webpack_require__(1);\r\nvar services_1 = __webpack_require__(2);\r\nvar AppComponent = (function () {\r\n    function AppComponent(noteService, route) {\r\n        this.noteService = noteService;\r\n        this.route = route;\r\n    }\r\n    AppComponent = __decorate([\r\n        core_1.Component({\r\n            selector: 'my-app',\r\n            template: __webpack_require__(33),\r\n            styles: [__webpack_require__(31)],\r\n        }), \r\n        __metadata('design:paramtypes', [services_1.NoteService, router_1.ActivatedRoute])\r\n    ], AppComponent);\r\n    return AppComponent;\r\n}());\r\nexports.AppComponent = AppComponent;\r\n\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\r\nvar router_1 = __webpack_require__(1);\r\nvar home_component_1 = __webpack_require__(10);\r\nvar about_component_1 = __webpack_require__(8);\r\nvar edit_note_component_1 = __webpack_require__(9);\r\nvar note_form_component_1 = __webpack_require__(11);\r\nvar routes = [\r\n    { path: '', component: home_component_1.HomeComponent },\r\n    { path: 'notes', component: home_component_1.HomeComponent },\r\n    { path: 'about', component: about_component_1.AboutComponent },\r\n    { path: 'new', component: note_form_component_1.NoteFormComponent },\r\n    { path: 'edit/:id', component: edit_note_component_1.EditNoteComponent }\r\n];\r\nexports.routing = router_1.RouterModule.forRoot(routes, {\r\n    useHash: true\r\n});\r\n\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\r\nvar core_1 = __webpack_require__(0);\r\nvar dexie_1 = __webpack_require__(37);\r\nvar NoteService = (function () {\r\n    function NoteService() {\r\n        var _this = this;\r\n        this.notes = new Map();\r\n        this.db = new dexie_1.default('ng2-notes');\r\n        // set up db\r\n        this.db.version(1).stores({\r\n            notes: '++id, title, content, created, updated'\r\n        });\r\n        this.loadNotes().then(function (notes) {\r\n            if (!notes.size) {\r\n                Promise.all([\r\n                    _this.createNote(new Note({\r\n                        content: 'Learn Angular2',\r\n                        done: true\r\n                    })),\r\n                    _this.createNote(new Note({\r\n                        title: 'Create Demo Application',\r\n                        content: \"\\n - Think of an application to build\\n - set up project\\n - finish project\",\r\n                        done: true\r\n                    }))\r\n                ]).then(function () {\r\n                    console.log('demo notes created');\r\n                });\r\n            }\r\n        });\r\n    }\r\n    NoteService.prototype.loadNotes = function () {\r\n        var _this = this;\r\n        return this.db.table('notes').toArray().then(function (entries) {\r\n            entries.forEach(function (data) {\r\n                var note = new Note(data);\r\n                _this.notes.set(data.id, note);\r\n            });\r\n            return _this.notes;\r\n        });\r\n    };\r\n    NoteService.prototype.hasNote = function (id) {\r\n        return this.notes.has(id);\r\n    };\r\n    NoteService.prototype.getNote = function (id) {\r\n        return this.notes.get(id);\r\n    };\r\n    NoteService.prototype.getNoteID = function (note) {\r\n        var entries = this.notes.entries(), entry;\r\n        while (entry = entries.next().value) {\r\n            if (entry[1] === note) {\r\n                return entry[0];\r\n            }\r\n            ;\r\n        }\r\n    };\r\n    NoteService.prototype.deleteNote = function (id) {\r\n        var _this = this;\r\n        if (this.hasNote(id)) {\r\n            // remote it from the db\r\n            return this.db.table('notes').delete(id).then(function () {\r\n                // remote it from the map\r\n                _this.notes.delete(id);\r\n            });\r\n        }\r\n        return dexie_1.default.Promise.reject(new Error('no note with that id'));\r\n    };\r\n    NoteService.prototype.createNote = function (data) {\r\n        var _this = this;\r\n        var note = new Note(data);\r\n        // add the note to the db and the array\r\n        return this.db.table('notes').put(note).then(function (id) {\r\n            // add it to the map\r\n            _this.notes.set(id, note);\r\n            return note;\r\n        });\r\n    };\r\n    NoteService.prototype.updateNote = function (id, data) {\r\n        var note = this.getNote(id);\r\n        note.update(data);\r\n        // save the note\r\n        return this.db.table('notes').put(note);\r\n    };\r\n    NoteService = __decorate([\r\n        core_1.Injectable(), \r\n        __metadata('design:paramtypes', [])\r\n    ], NoteService);\r\n    return NoteService;\r\n}());\r\nexports.NoteService = NoteService;\r\nvar Note = (function () {\r\n    function Note(data) {\r\n        this.title = '';\r\n        this.content = '';\r\n        this.done = false;\r\n        this.created = new Date();\r\n        this.updated = new Date();\r\n        if (data) {\r\n            this.update(data);\r\n        }\r\n    }\r\n    Note.prototype.update = function (data) {\r\n        if (!data.created) {\r\n            this.created = new Date(data.created);\r\n        }\r\n        if (!data.updated) {\r\n            this.updated = new Date(data.updated);\r\n        }\r\n        if (data.done !== undefined) {\r\n            this.done = data.done;\r\n        }\r\n        this.title = data.title || this.title;\r\n        this.content = data.content || this.content;\r\n    };\r\n    return Note;\r\n}());\r\nexports.Note = Note;\r\n\n\n/***/ },\n/* 27 */\n/***/ function(module, exports) {\n\nmodule.exports = \"<h1 id=\\\"ng2-notes\\\">Ng2-notes</h1>\\n<p>A simple demo project built with <a href=\\\"https://angular.io\\\">angular2</a> using <a href=\\\"https://github.com/preboot/angular2-webpack\\\">angular2-webpack</a></p>\\n\";\n\n/***/ },\n/* 28 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n__export(__webpack_require__(12));\nvar core_1 = __webpack_require__(0);\nvar markdown_to_html_pipe_2 = __webpack_require__(12);\nvar MarkdownToHtmlModule = (function () {\n    function MarkdownToHtmlModule() {\n    }\n    MarkdownToHtmlModule.decorators = [\n        { type: core_1.NgModule, args: [{\n                    declarations: [markdown_to_html_pipe_2.MarkdownToHtmlPipe],\n                    exports: [markdown_to_html_pipe_2.MarkdownToHtmlPipe]\n                },] },\n    ];\n    /** @nocollapse */\n    MarkdownToHtmlModule.ctorParameters = [];\n    return MarkdownToHtmlModule;\n}());\nexports.MarkdownToHtmlModule = MarkdownToHtmlModule;\n//# sourceMappingURL=index.js.map\n\n/***/ },\n/* 29 */\n/***/ function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {/**\n * marked - a markdown parser\n * Copyright (c) 2011-2014, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/chjj/marked\n */\n\n;(function() {\n\n/**\n * Block-Level Grammar\n */\n\nvar block = {\n  newline: /^\\n+/,\n  code: /^( {4}[^\\n]+\\n*)+/,\n  fences: noop,\n  hr: /^( *[-*_]){3,} *(?:\\n+|$)/,\n  heading: /^ *(#{1,6}) *([^\\n]+?) *#* *(?:\\n+|$)/,\n  nptable: noop,\n  lheading: /^([^\\n]+)\\n *(=|-){2,} *(?:\\n+|$)/,\n  blockquote: /^( *>[^\\n]+(\\n(?!def)[^\\n]+)*\\n*)+/,\n  list: /^( *)(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\n  html: /^ *(?:comment *(?:\\n|\\s*$)|closed *(?:\\n{2,}|\\s*$)|closing *(?:\\n{2,}|\\s*$))/,\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +[\"(]([^\\n]+)[\")])? *(?:\\n+|$)/,\n  table: noop,\n  paragraph: /^((?:[^\\n]+\\n?(?!hr|heading|lheading|blockquote|tag|def))+)\\n*/,\n  text: /^[^\\n]+/\n};\n\nblock.bullet = /(?:[*+-]|\\d+\\.)/;\nblock.item = /^( *)(bull) [^\\n]*(?:\\n(?!\\1bull )[^\\n]*)*/;\nblock.item = replace(block.item, 'gm')\n  (/bull/g, block.bullet)\n  ();\n\nblock.list = replace(block.list)\n  (/bull/g, block.bullet)\n  ('hr', '\\\\n+(?=\\\\1?(?:[-*_] *){3,}(?:\\\\n+|$))')\n  ('def', '\\\\n+(?=' + block.def.source + ')')\n  ();\n\nblock.blockquote = replace(block.blockquote)\n  ('def', block.def)\n  ();\n\nblock._tag = '(?!(?:'\n  + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code'\n  + '|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo'\n  + '|span|br|wbr|ins|del|img)\\\\b)\\\\w+(?!:/|[^\\\\w\\\\s@]*@)\\\\b';\n\nblock.html = replace(block.html)\n  ('comment', /<!--[\\s\\S]*?-->/)\n  ('closed', /<(tag)[\\s\\S]+?<\\/\\1>/)\n  ('closing', /<tag(?:\"[^\"]*\"|'[^']*'|[^'\">])*?>/)\n  (/tag/g, block._tag)\n  ();\n\nblock.paragraph = replace(block.paragraph)\n  ('hr', block.hr)\n  ('heading', block.heading)\n  ('lheading', block.lheading)\n  ('blockquote', block.blockquote)\n  ('tag', '<' + block._tag)\n  ('def', block.def)\n  ();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = merge({}, block);\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = merge({}, block.normal, {\n  fences: /^ *(`{3,}|~{3,})[ \\.]*(\\S+)? *\\n([\\s\\S]*?)\\s*\\1 *(?:\\n+|$)/,\n  paragraph: /^/,\n  heading: /^ *(#{1,6}) +([^\\n]+?) *#* *(?:\\n+|$)/\n});\n\nblock.gfm.paragraph = replace(block.paragraph)\n  ('(?!', '(?!'\n    + block.gfm.fences.source.replace('\\\\1', '\\\\2') + '|'\n    + block.list.source.replace('\\\\1', '\\\\3') + '|')\n  ();\n\n/**\n * GFM + Tables Block Grammar\n */\n\nblock.tables = merge({}, block.gfm, {\n  nptable: /^ *(\\S.*\\|.*)\\n *([-:]+ *\\|[-| :]*)\\n((?:.*\\|.*(?:\\n|$))*)\\n*/,\n  table: /^ *\\|(.+)\\n *\\|( *[-:]+[-| :]*)\\n((?: *\\|.*(?:\\n|$))*)\\n*/\n});\n\n/**\n * Block Lexer\n */\n\nfunction Lexer(options) {\n  this.tokens = [];\n  this.tokens.links = {};\n  this.options = options || marked.defaults;\n  this.rules = block.normal;\n\n  if (this.options.gfm) {\n    if (this.options.tables) {\n      this.rules = block.tables;\n    } else {\n      this.rules = block.gfm;\n    }\n  }\n}\n\n/**\n * Expose Block Rules\n */\n\nLexer.rules = block;\n\n/**\n * Static Lex Method\n */\n\nLexer.lex = function(src, options) {\n  var lexer = new Lexer(options);\n  return lexer.lex(src);\n};\n\n/**\n * Preprocessing\n */\n\nLexer.prototype.lex = function(src) {\n  src = src\n    .replace(/\\r\\n|\\r/g, '\\n')\n    .replace(/\\t/g, '    ')\n    .replace(/\\u00a0/g, ' ')\n    .replace(/\\u2424/g, '\\n');\n\n  return this.token(src, true);\n};\n\n/**\n * Lexing\n */\n\nLexer.prototype.token = function(src, top, bq) {\n  var src = src.replace(/^ +$/gm, '')\n    , next\n    , loose\n    , cap\n    , bull\n    , b\n    , item\n    , space\n    , i\n    , l;\n\n  while (src) {\n    // newline\n    if (cap = this.rules.newline.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[0].length > 1) {\n        this.tokens.push({\n          type: 'space'\n        });\n      }\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      cap = cap[0].replace(/^ {4}/gm, '');\n      this.tokens.push({\n        type: 'code',\n        text: !this.options.pedantic\n          ? cap.replace(/\\n+$/, '')\n          : cap\n      });\n      continue;\n    }\n\n    // fences (gfm)\n    if (cap = this.rules.fences.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'code',\n        lang: cap[2],\n        text: cap[3] || ''\n      });\n      continue;\n    }\n\n    // heading\n    if (cap = this.rules.heading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[1].length,\n        text: cap[2]\n      });\n      continue;\n    }\n\n    // table no leading pipe (gfm)\n    if (top && (cap = this.rules.nptable.exec(src))) {\n      src = src.substring(cap[0].length);\n\n      item = {\n        type: 'table',\n        header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3].replace(/\\n$/, '').split('\\n')\n      };\n\n      for (i = 0; i < item.align.length; i++) {\n        if (/^ *-+: *$/.test(item.align[i])) {\n          item.align[i] = 'right';\n        } else if (/^ *:-+: *$/.test(item.align[i])) {\n          item.align[i] = 'center';\n        } else if (/^ *:-+ *$/.test(item.align[i])) {\n          item.align[i] = 'left';\n        } else {\n          item.align[i] = null;\n        }\n      }\n\n      for (i = 0; i < item.cells.length; i++) {\n        item.cells[i] = item.cells[i].split(/ *\\| */);\n      }\n\n      this.tokens.push(item);\n\n      continue;\n    }\n\n    // lheading\n    if (cap = this.rules.lheading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[2] === '=' ? 1 : 2,\n        text: cap[1]\n      });\n      continue;\n    }\n\n    // hr\n    if (cap = this.rules.hr.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'hr'\n      });\n      continue;\n    }\n\n    // blockquote\n    if (cap = this.rules.blockquote.exec(src)) {\n      src = src.substring(cap[0].length);\n\n      this.tokens.push({\n        type: 'blockquote_start'\n      });\n\n      cap = cap[0].replace(/^ *> ?/gm, '');\n\n      // Pass `top` to keep the current\n      // \"toplevel\" state. This is exactly\n      // how markdown.pl works.\n      this.token(cap, top, true);\n\n      this.tokens.push({\n        type: 'blockquote_end'\n      });\n\n      continue;\n    }\n\n    // list\n    if (cap = this.rules.list.exec(src)) {\n      src = src.substring(cap[0].length);\n      bull = cap[2];\n\n      this.tokens.push({\n        type: 'list_start',\n        ordered: bull.length > 1\n      });\n\n      // Get each top-level item.\n      cap = cap[0].match(this.rules.item);\n\n      next = false;\n      l = cap.length;\n      i = 0;\n\n      for (; i < l; i++) {\n        item = cap[i];\n\n        // Remove the list item's bullet\n        // so it is seen as the next token.\n        space = item.length;\n        item = item.replace(/^ *([*+-]|\\d+\\.) +/, '');\n\n        // Outdent whatever the\n        // list item contains. Hacky.\n        if (~item.indexOf('\\n ')) {\n          space -= item.length;\n          item = !this.options.pedantic\n            ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '')\n            : item.replace(/^ {1,4}/gm, '');\n        }\n\n        // Determine whether the next list item belongs here.\n        // Backpedal if it does not belong in this list.\n        if (this.options.smartLists && i !== l - 1) {\n          b = block.bullet.exec(cap[i + 1])[0];\n          if (bull !== b && !(bull.length > 1 && b.length > 1)) {\n            src = cap.slice(i + 1).join('\\n') + src;\n            i = l - 1;\n          }\n        }\n\n        // Determine whether item is loose or not.\n        // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n        // for discount behavior.\n        loose = next || /\\n\\n(?!\\s*$)/.test(item);\n        if (i !== l - 1) {\n          next = item.charAt(item.length - 1) === '\\n';\n          if (!loose) loose = next;\n        }\n\n        this.tokens.push({\n          type: loose\n            ? 'loose_item_start'\n            : 'list_item_start'\n        });\n\n        // Recurse.\n        this.token(item, false, bq);\n\n        this.tokens.push({\n          type: 'list_item_end'\n        });\n      }\n\n      this.tokens.push({\n        type: 'list_end'\n      });\n\n      continue;\n    }\n\n    // html\n    if (cap = this.rules.html.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: this.options.sanitize\n          ? 'paragraph'\n          : 'html',\n        pre: !this.options.sanitizer\n          && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n        text: cap[0]\n      });\n      continue;\n    }\n\n    // def\n    if ((!bq && top) && (cap = this.rules.def.exec(src))) {\n      src = src.substring(cap[0].length);\n      this.tokens.links[cap[1].toLowerCase()] = {\n        href: cap[2],\n        title: cap[3]\n      };\n      continue;\n    }\n\n    // table (gfm)\n    if (top && (cap = this.rules.table.exec(src))) {\n      src = src.substring(cap[0].length);\n\n      item = {\n        type: 'table',\n        header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3].replace(/(?: *\\| *)?\\n$/, '').split('\\n')\n      };\n\n      for (i = 0; i < item.align.length; i++) {\n        if (/^ *-+: *$/.test(item.align[i])) {\n          item.align[i] = 'right';\n        } else if (/^ *:-+: *$/.test(item.align[i])) {\n          item.align[i] = 'center';\n        } else if (/^ *:-+ *$/.test(item.align[i])) {\n          item.align[i] = 'left';\n        } else {\n          item.align[i] = null;\n        }\n      }\n\n      for (i = 0; i < item.cells.length; i++) {\n        item.cells[i] = item.cells[i]\n          .replace(/^ *\\| *| *\\| *$/g, '')\n          .split(/ *\\| */);\n      }\n\n      this.tokens.push(item);\n\n      continue;\n    }\n\n    // top-level paragraph\n    if (top && (cap = this.rules.paragraph.exec(src))) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'paragraph',\n        text: cap[1].charAt(cap[1].length - 1) === '\\n'\n          ? cap[1].slice(0, -1)\n          : cap[1]\n      });\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      // Top-level should never reach here.\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'text',\n        text: cap[0]\n      });\n      continue;\n    }\n\n    if (src) {\n      throw new\n        Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return this.tokens;\n};\n\n/**\n * Inline-Level Grammar\n */\n\nvar inline = {\n  escape: /^\\\\([\\\\`*{}\\[\\]()#+\\-.!_>])/,\n  autolink: /^<([^ >]+(@|:\\/)[^ >]+)>/,\n  url: noop,\n  tag: /^<!--[\\s\\S]*?-->|^<\\/?\\w+(?:\"[^\"]*\"|'[^']*'|[^'\">])*?>/,\n  link: /^!?\\[(inside)\\]\\(href\\)/,\n  reflink: /^!?\\[(inside)\\]\\s*\\[([^\\]]*)\\]/,\n  nolink: /^!?\\[((?:\\[[^\\]]*\\]|[^\\[\\]])*)\\]/,\n  strong: /^__([\\s\\S]+?)__(?!_)|^\\*\\*([\\s\\S]+?)\\*\\*(?!\\*)/,\n  em: /^\\b_((?:[^_]|__)+?)_\\b|^\\*((?:\\*\\*|[\\s\\S])+?)\\*(?!\\*)/,\n  code: /^(`+)\\s*([\\s\\S]*?[^`])\\s*\\1(?!`)/,\n  br: /^ {2,}\\n(?!\\s*$)/,\n  del: noop,\n  text: /^[\\s\\S]+?(?=[\\\\<!\\[_*`]| {2,}\\n|$)/\n};\n\ninline._inside = /(?:\\[[^\\]]*\\]|[^\\[\\]]|\\](?=[^\\[]*\\]))*/;\ninline._href = /\\s*<?([\\s\\S]*?)>?(?:\\s+['\"]([\\s\\S]*?)['\"])?\\s*/;\n\ninline.link = replace(inline.link)\n  ('inside', inline._inside)\n  ('href', inline._href)\n  ();\n\ninline.reflink = replace(inline.reflink)\n  ('inside', inline._inside)\n  ();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = merge({}, inline);\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = merge({}, inline.normal, {\n  strong: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n  em: /^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/\n});\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = merge({}, inline.normal, {\n  escape: replace(inline.escape)('])', '~|])')(),\n  url: /^(https?:\\/\\/[^\\s<]+[^<.,:;\"')\\]\\s])/,\n  del: /^~~(?=\\S)([\\s\\S]*?\\S)~~/,\n  text: replace(inline.text)\n    (']|', '~]|')\n    ('|', '|https?://|')\n    ()\n});\n\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = merge({}, inline.gfm, {\n  br: replace(inline.br)('{2,}', '*')(),\n  text: replace(inline.gfm.text)('{2,}', '*')()\n});\n\n/**\n * Inline Lexer & Compiler\n */\n\nfunction InlineLexer(links, options) {\n  this.options = options || marked.defaults;\n  this.links = links;\n  this.rules = inline.normal;\n  this.renderer = this.options.renderer || new Renderer;\n  this.renderer.options = this.options;\n\n  if (!this.links) {\n    throw new\n      Error('Tokens array requires a `links` property.');\n  }\n\n  if (this.options.gfm) {\n    if (this.options.breaks) {\n      this.rules = inline.breaks;\n    } else {\n      this.rules = inline.gfm;\n    }\n  } else if (this.options.pedantic) {\n    this.rules = inline.pedantic;\n  }\n}\n\n/**\n * Expose Inline Rules\n */\n\nInlineLexer.rules = inline;\n\n/**\n * Static Lexing/Compiling Method\n */\n\nInlineLexer.output = function(src, links, options) {\n  var inline = new InlineLexer(links, options);\n  return inline.output(src);\n};\n\n/**\n * Lexing/Compiling\n */\n\nInlineLexer.prototype.output = function(src) {\n  var out = ''\n    , link\n    , text\n    , href\n    , cap;\n\n  while (src) {\n    // escape\n    if (cap = this.rules.escape.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += cap[1];\n      continue;\n    }\n\n    // autolink\n    if (cap = this.rules.autolink.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[2] === '@') {\n        text = cap[1].charAt(6) === ':'\n          ? this.mangle(cap[1].substring(7))\n          : this.mangle(cap[1]);\n        href = this.mangle('mailto:') + text;\n      } else {\n        text = escape(cap[1]);\n        href = text;\n      }\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // url (gfm)\n    if (!this.inLink && (cap = this.rules.url.exec(src))) {\n      src = src.substring(cap[0].length);\n      text = escape(cap[1]);\n      href = text;\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // tag\n    if (cap = this.rules.tag.exec(src)) {\n      if (!this.inLink && /^<a /i.test(cap[0])) {\n        this.inLink = true;\n      } else if (this.inLink && /^<\\/a>/i.test(cap[0])) {\n        this.inLink = false;\n      }\n      src = src.substring(cap[0].length);\n      out += this.options.sanitize\n        ? this.options.sanitizer\n          ? this.options.sanitizer(cap[0])\n          : escape(cap[0])\n        : cap[0]\n      continue;\n    }\n\n    // link\n    if (cap = this.rules.link.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.inLink = true;\n      out += this.outputLink(cap, {\n        href: cap[2],\n        title: cap[3]\n      });\n      this.inLink = false;\n      continue;\n    }\n\n    // reflink, nolink\n    if ((cap = this.rules.reflink.exec(src))\n        || (cap = this.rules.nolink.exec(src))) {\n      src = src.substring(cap[0].length);\n      link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      link = this.links[link.toLowerCase()];\n      if (!link || !link.href) {\n        out += cap[0].charAt(0);\n        src = cap[0].substring(1) + src;\n        continue;\n      }\n      this.inLink = true;\n      out += this.outputLink(cap, link);\n      this.inLink = false;\n      continue;\n    }\n\n    // strong\n    if (cap = this.rules.strong.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.strong(this.output(cap[2] || cap[1]));\n      continue;\n    }\n\n    // em\n    if (cap = this.rules.em.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.em(this.output(cap[2] || cap[1]));\n      continue;\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.codespan(escape(cap[2], true));\n      continue;\n    }\n\n    // br\n    if (cap = this.rules.br.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.br();\n      continue;\n    }\n\n    // del (gfm)\n    if (cap = this.rules.del.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.del(this.output(cap[1]));\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.text(escape(this.smartypants(cap[0])));\n      continue;\n    }\n\n    if (src) {\n      throw new\n        Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return out;\n};\n\n/**\n * Compile Link\n */\n\nInlineLexer.prototype.outputLink = function(cap, link) {\n  var href = escape(link.href)\n    , title = link.title ? escape(link.title) : null;\n\n  return cap[0].charAt(0) !== '!'\n    ? this.renderer.link(href, title, this.output(cap[1]))\n    : this.renderer.image(href, title, escape(cap[1]));\n};\n\n/**\n * Smartypants Transformations\n */\n\nInlineLexer.prototype.smartypants = function(text) {\n  if (!this.options.smartypants) return text;\n  return text\n    // em-dashes\n    .replace(/---/g, '\\u2014')\n    // en-dashes\n    .replace(/--/g, '\\u2013')\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n    // closing singles & apostrophes\n    .replace(/'/g, '\\u2019')\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n    // closing doubles\n    .replace(/\"/g, '\\u201d')\n    // ellipses\n    .replace(/\\.{3}/g, '\\u2026');\n};\n\n/**\n * Mangle Links\n */\n\nInlineLexer.prototype.mangle = function(text) {\n  if (!this.options.mangle) return text;\n  var out = ''\n    , l = text.length\n    , i = 0\n    , ch;\n\n  for (; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n};\n\n/**\n * Renderer\n */\n\nfunction Renderer(options) {\n  this.options = options || {};\n}\n\nRenderer.prototype.code = function(code, lang, escaped) {\n  if (this.options.highlight) {\n    var out = this.options.highlight(code, lang);\n    if (out != null && out !== code) {\n      escaped = true;\n      code = out;\n    }\n  }\n\n  if (!lang) {\n    return '<pre><code>'\n      + (escaped ? code : escape(code, true))\n      + '\\n</code></pre>';\n  }\n\n  return '<pre><code class=\"'\n    + this.options.langPrefix\n    + escape(lang, true)\n    + '\">'\n    + (escaped ? code : escape(code, true))\n    + '\\n</code></pre>\\n';\n};\n\nRenderer.prototype.blockquote = function(quote) {\n  return '<blockquote>\\n' + quote + '</blockquote>\\n';\n};\n\nRenderer.prototype.html = function(html) {\n  return html;\n};\n\nRenderer.prototype.heading = function(text, level, raw) {\n  return '<h'\n    + level\n    + ' id=\"'\n    + this.options.headerPrefix\n    + raw.toLowerCase().replace(/[^\\w]+/g, '-')\n    + '\">'\n    + text\n    + '</h'\n    + level\n    + '>\\n';\n};\n\nRenderer.prototype.hr = function() {\n  return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n};\n\nRenderer.prototype.list = function(body, ordered) {\n  var type = ordered ? 'ol' : 'ul';\n  return '<' + type + '>\\n' + body + '</' + type + '>\\n';\n};\n\nRenderer.prototype.listitem = function(text) {\n  return '<li>' + text + '</li>\\n';\n};\n\nRenderer.prototype.paragraph = function(text) {\n  return '<p>' + text + '</p>\\n';\n};\n\nRenderer.prototype.table = function(header, body) {\n  return '<table>\\n'\n    + '<thead>\\n'\n    + header\n    + '</thead>\\n'\n    + '<tbody>\\n'\n    + body\n    + '</tbody>\\n'\n    + '</table>\\n';\n};\n\nRenderer.prototype.tablerow = function(content) {\n  return '<tr>\\n' + content + '</tr>\\n';\n};\n\nRenderer.prototype.tablecell = function(content, flags) {\n  var type = flags.header ? 'th' : 'td';\n  var tag = flags.align\n    ? '<' + type + ' style=\"text-align:' + flags.align + '\">'\n    : '<' + type + '>';\n  return tag + content + '</' + type + '>\\n';\n};\n\n// span level renderer\nRenderer.prototype.strong = function(text) {\n  return '<strong>' + text + '</strong>';\n};\n\nRenderer.prototype.em = function(text) {\n  return '<em>' + text + '</em>';\n};\n\nRenderer.prototype.codespan = function(text) {\n  return '<code>' + text + '</code>';\n};\n\nRenderer.prototype.br = function() {\n  return this.options.xhtml ? '<br/>' : '<br>';\n};\n\nRenderer.prototype.del = function(text) {\n  return '<del>' + text + '</del>';\n};\n\nRenderer.prototype.link = function(href, title, text) {\n  if (this.options.sanitize) {\n    try {\n      var prot = decodeURIComponent(unescape(href))\n        .replace(/[^\\w:]/g, '')\n        .toLowerCase();\n    } catch (e) {\n      return '';\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0) {\n      return '';\n    }\n  }\n  var out = '<a href=\"' + href + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += '>' + text + '</a>';\n  return out;\n};\n\nRenderer.prototype.image = function(href, title, text) {\n  var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += this.options.xhtml ? '/>' : '>';\n  return out;\n};\n\nRenderer.prototype.text = function(text) {\n  return text;\n};\n\n/**\n * Parsing & Compiling\n */\n\nfunction Parser(options) {\n  this.tokens = [];\n  this.token = null;\n  this.options = options || marked.defaults;\n  this.options.renderer = this.options.renderer || new Renderer;\n  this.renderer = this.options.renderer;\n  this.renderer.options = this.options;\n}\n\n/**\n * Static Parse Method\n */\n\nParser.parse = function(src, options, renderer) {\n  var parser = new Parser(options, renderer);\n  return parser.parse(src);\n};\n\n/**\n * Parse Loop\n */\n\nParser.prototype.parse = function(src) {\n  this.inline = new InlineLexer(src.links, this.options, this.renderer);\n  this.tokens = src.reverse();\n\n  var out = '';\n  while (this.next()) {\n    out += this.tok();\n  }\n\n  return out;\n};\n\n/**\n * Next Token\n */\n\nParser.prototype.next = function() {\n  return this.token = this.tokens.pop();\n};\n\n/**\n * Preview Next Token\n */\n\nParser.prototype.peek = function() {\n  return this.tokens[this.tokens.length - 1] || 0;\n};\n\n/**\n * Parse Text Tokens\n */\n\nParser.prototype.parseText = function() {\n  var body = this.token.text;\n\n  while (this.peek().type === 'text') {\n    body += '\\n' + this.next().text;\n  }\n\n  return this.inline.output(body);\n};\n\n/**\n * Parse Current Token\n */\n\nParser.prototype.tok = function() {\n  switch (this.token.type) {\n    case 'space': {\n      return '';\n    }\n    case 'hr': {\n      return this.renderer.hr();\n    }\n    case 'heading': {\n      return this.renderer.heading(\n        this.inline.output(this.token.text),\n        this.token.depth,\n        this.token.text);\n    }\n    case 'code': {\n      return this.renderer.code(this.token.text,\n        this.token.lang,\n        this.token.escaped);\n    }\n    case 'table': {\n      var header = ''\n        , body = ''\n        , i\n        , row\n        , cell\n        , flags\n        , j;\n\n      // header\n      cell = '';\n      for (i = 0; i < this.token.header.length; i++) {\n        flags = { header: true, align: this.token.align[i] };\n        cell += this.renderer.tablecell(\n          this.inline.output(this.token.header[i]),\n          { header: true, align: this.token.align[i] }\n        );\n      }\n      header += this.renderer.tablerow(cell);\n\n      for (i = 0; i < this.token.cells.length; i++) {\n        row = this.token.cells[i];\n\n        cell = '';\n        for (j = 0; j < row.length; j++) {\n          cell += this.renderer.tablecell(\n            this.inline.output(row[j]),\n            { header: false, align: this.token.align[j] }\n          );\n        }\n\n        body += this.renderer.tablerow(cell);\n      }\n      return this.renderer.table(header, body);\n    }\n    case 'blockquote_start': {\n      var body = '';\n\n      while (this.next().type !== 'blockquote_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.blockquote(body);\n    }\n    case 'list_start': {\n      var body = ''\n        , ordered = this.token.ordered;\n\n      while (this.next().type !== 'list_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.list(body, ordered);\n    }\n    case 'list_item_start': {\n      var body = '';\n\n      while (this.next().type !== 'list_item_end') {\n        body += this.token.type === 'text'\n          ? this.parseText()\n          : this.tok();\n      }\n\n      return this.renderer.listitem(body);\n    }\n    case 'loose_item_start': {\n      var body = '';\n\n      while (this.next().type !== 'list_item_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.listitem(body);\n    }\n    case 'html': {\n      var html = !this.token.pre && !this.options.pedantic\n        ? this.inline.output(this.token.text)\n        : this.token.text;\n      return this.renderer.html(html);\n    }\n    case 'paragraph': {\n      return this.renderer.paragraph(this.inline.output(this.token.text));\n    }\n    case 'text': {\n      return this.renderer.paragraph(this.parseText());\n    }\n  }\n};\n\n/**\n * Helpers\n */\n\nfunction escape(html, encode) {\n  return html\n    .replace(!encode ? /&(?!#?\\w+;)/g : /&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#39;');\n}\n\nfunction unescape(html) {\n\t// explicitly match decimal, hex, and named HTML entities \n  return html.replace(/&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/g, function(_, n) {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nfunction replace(regex, opt) {\n  regex = regex.source;\n  opt = opt || '';\n  return function self(name, val) {\n    if (!name) return new RegExp(regex, opt);\n    val = val.source || val;\n    val = val.replace(/(^|[^\\[])\\^/g, '$1');\n    regex = regex.replace(name, val);\n    return self;\n  };\n}\n\nfunction noop() {}\nnoop.exec = noop;\n\nfunction merge(obj) {\n  var i = 1\n    , target\n    , key;\n\n  for (; i < arguments.length; i++) {\n    target = arguments[i];\n    for (key in target) {\n      if (Object.prototype.hasOwnProperty.call(target, key)) {\n        obj[key] = target[key];\n      }\n    }\n  }\n\n  return obj;\n}\n\n\n/**\n * Marked\n */\n\nfunction marked(src, opt, callback) {\n  if (callback || typeof opt === 'function') {\n    if (!callback) {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n\n    var highlight = opt.highlight\n      , tokens\n      , pending\n      , i = 0;\n\n    try {\n      tokens = Lexer.lex(src, opt)\n    } catch (e) {\n      return callback(e);\n    }\n\n    pending = tokens.length;\n\n    var done = function(err) {\n      if (err) {\n        opt.highlight = highlight;\n        return callback(err);\n      }\n\n      var out;\n\n      try {\n        out = Parser.parse(tokens, opt);\n      } catch (e) {\n        err = e;\n      }\n\n      opt.highlight = highlight;\n\n      return err\n        ? callback(err)\n        : callback(null, out);\n    };\n\n    if (!highlight || highlight.length < 3) {\n      return done();\n    }\n\n    delete opt.highlight;\n\n    if (!pending) return done();\n\n    for (; i < tokens.length; i++) {\n      (function(token) {\n        if (token.type !== 'code') {\n          return --pending || done();\n        }\n        return highlight(token.text, token.lang, function(err, code) {\n          if (err) return done(err);\n          if (code == null || code === token.text) {\n            return --pending || done();\n          }\n          token.text = code;\n          token.escaped = true;\n          --pending || done();\n        });\n      })(tokens[i]);\n    }\n\n    return;\n  }\n  try {\n    if (opt) opt = merge({}, marked.defaults, opt);\n    return Parser.parse(Lexer.lex(src, opt), opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/chjj/marked.';\n    if ((opt || marked.defaults).silent) {\n      return '<p>An error occured:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  merge(marked.defaults, opt);\n  return marked;\n};\n\nmarked.defaults = {\n  gfm: true,\n  tables: true,\n  breaks: false,\n  pedantic: false,\n  sanitize: false,\n  sanitizer: null,\n  mangle: true,\n  smartLists: false,\n  silent: false,\n  highlight: null,\n  langPrefix: 'lang-',\n  smartypants: false,\n  headerPrefix: '',\n  renderer: new Renderer,\n  xhtml: false\n};\n\n/**\n * Expose\n */\n\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\n\nmarked.Renderer = Renderer;\n\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\n\nmarked.InlineLexer = InlineLexer;\nmarked.inlineLexer = InlineLexer.output;\n\nmarked.parse = marked;\n\nif (true) {\n  module.exports = marked;\n} else if (typeof define === 'function' && define.amd) {\n  define(function() { return marked; });\n} else {\n  this.marked = marked;\n}\n\n}).call(function() {\n  return this || (typeof window !== 'undefined' ? window : global);\n}());\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))\n\n/***/ },\n/* 30 */,\n/* 31 */\n/***/ function(module, exports) {\n\nmodule.exports = \":host {\\n  height: 100vh;\\n  width: 100vw;\\n  overflow: hidden;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -ms-flex-direction: column;\\n      flex-direction: column; }\\n\\nfooter {\\n  width: 100%;\\n  background-color: #eee; }\\n\\nbutton {\\n  cursor: pointer; }\\n\"\n\n/***/ },\n/* 32 */\n/***/ function(module, exports) {\n\nmodule.exports = \"<header>\\r\\n\\t<!-- nav bar -->\\r\\n\\t<nav class=\\\"card card-inverse rounded-0 flex-row p-2\\\" style=\\\"background-color: #333; border-color: #333;\\\">\\r\\n\\t\\t<h3 class=\\\"navbar-brand p-0 m-0 mr-3 hidden-xs-down\\\" routerLink=\\\"/notes\\\">Ng2 Notes</h3>\\r\\n\\r\\n\\t\\t<!-- mobile buttons -->\\r\\n\\t\\t<button class=\\\"btn btn-default mr-auto\\\" type=\\\"button\\\" routerLink=\\\"/notes\\\"><i class=\\\"fa fa-chevron-left\\\"></i> Back</button>\\r\\n\\t</nav>\\r\\n</header>\\r\\n\\r\\n<main class=\\\"page-content\\\">\\r\\n\\t<div class=\\\"container\\\">\\r\\n\\t\\t<div class=\\\"card\\\">\\r\\n\\t\\t\\t<div class=\\\"card-block\\\">\\r\\n\\t\\t\\t\\t<div [innerHTML]=\\\"README\\\"></div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</main>\\r\\n\"\n\n/***/ },\n/* 33 */\n/***/ function(module, exports) {\n\nmodule.exports = \"<router-outlet class=\\\"page\\\"></router-outlet>\\r\\n\\r\\n<footer class=\\\"footer mt-auto p-3\\\">\\r\\n\\t<div class=\\\"container text-center\\\">\\r\\n\\t\\t<span class=\\\"text-muted\\\">Created By <a href=\\\"http://www.rdfriedl.com\\\" target=\\\"_blank\\\">rdfriedl</a></span>\\r\\n\\t</div>\\r\\n</footer>\\r\\n\"\n\n/***/ },\n/* 34 */\n/***/ function(module, exports) {\n\nmodule.exports = \"<header>\\r\\n\\t<!-- nav bar -->\\r\\n\\t<nav class=\\\"card card-inverse rounded-0 flex-row p-2\\\" style=\\\"background-color: #333; border-color: #333;\\\">\\r\\n\\t\\t<h3 class=\\\"navbar-brand p-0 m-0 mr-3 hidden-sm-down\\\" routerLink=\\\"/notes\\\">Ng2 Notes</h3>\\r\\n\\r\\n\\t\\t<!-- mobile buttons -->\\r\\n\\t\\t<button class=\\\"btn btn-default mr-auto\\\" type=\\\"button\\\" routerLink=\\\"/notes\\\"><i class=\\\"fa fa-chevron-left\\\"></i> Back</button>\\r\\n\\t\\t<button class=\\\"btn mx-auto hidden-md-up\\\" type=\\\"button\\\" (click)=\\\"toggleMobilePreview()\\\" [ngClass]=\\\"{'btn-primary': mobilePreview, 'btn-outline-primary': !mobilePreview}\\\"><i class=\\\"fa fa-eye\\\"></i> Preview</button>\\r\\n\\r\\n\\t\\t<!-- desktop buttons -->\\r\\n\\t\\t<button class=\\\"btn btn-success ml-auto\\\" type=\\\"submit\\\" [disabled]=\\\"!noteForm.form.valid\\\" form=\\\"new-note-form\\\"><i class=\\\"fa fa-check\\\"></i> <span>Save</span></button>\\r\\n\\t</nav>\\r\\n</header>\\r\\n\\r\\n<main class=\\\"page-content\\\">\\r\\n\\t<form id=\\\"new-note-form\\\" class=\\\"pt-3\\\" (ngSubmit)=\\\"saveNote()\\\" #noteForm=\\\"ngForm\\\">\\r\\n\\t\\t<div class=\\\"container\\\">\\r\\n\\t\\t\\t<div class=\\\"row\\\" *ngIf=\\\"!mobilePreview\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"col-md-6 col-sm-12\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" name=\\\"title\\\" class=\\\"form-control\\\" placeholder=\\\"Title\\\" [(ngModel)]=\\\"modal.title\\\" autocomplete=\\\"off\\\">\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t<textarea class=\\\"form-control\\\" name=\\\"content\\\" placeholder=\\\"Some relevant infomation\\\" [(ngModel)]=\\\"modal.content\\\" required style=\\\"height: 35vh;\\\" autocomplete=\\\"off\\\"></textarea>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"col-6 hidden-sm-down\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label>Preview</label>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"card\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card-header\\\" *ngIf=\\\"modal.title\\\">{{modal.title}}</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card-block\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card-text markdown\\\" [innerHTML]=\\\"modal.content | MarkdownToHtml\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"row\\\" *ngIf=\\\"mobilePreview\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"col-12\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"card\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"card-header\\\" *ngIf=\\\"modal.title\\\">{{modal.title}}</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"card-block\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card-text markdown\\\" [innerHTML]=\\\"modal.content | MarkdownToHtml\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</form>\\r\\n</main>\\r\\n\"\n\n/***/ },\n/* 35 */\n/***/ function(module, exports) {\n\nmodule.exports = \"<header>\\r\\n\\t<!-- nav bar -->\\r\\n\\t<nav class=\\\"card card-inverse rounded-0 flex-row p-2\\\" style=\\\"background-color: #333; border-color: #333;\\\">\\r\\n\\t\\t<h3 class=\\\"navbar-brand p-0 m-0\\\" routerLink=\\\"/notes\\\">Ng2 Notes</h3>\\r\\n\\r\\n\\t\\t<!-- mobile buttons -->\\r\\n\\t\\t<div class=\\\"ml-auto hidden-sm-up\\\">\\r\\n\\t\\t\\t<button class=\\\"btn btn-sm btn-outline-info hidden-sm-up p-1\\\" routerLink=\\\"/about\\\" routerLinkActive=\\\"active\\\"><i class=\\\"fa fa-info fa-fw fa-2x\\\"></i></button>\\r\\n\\t\\t\\t<button class=\\\"btn btn-sm btn-outline-success hidden-sm-up p-1\\\" routerLink=\\\"/new\\\" routerLinkActive=\\\"active\\\"><i class=\\\"fa fa-plus fa-fw fa-2x\\\"></i></button>\\r\\n\\t\\t</div>\\r\\n\\r\\n\\t\\t<!-- desktop buttons -->\\r\\n\\t\\t<div class=\\\"ml-auto hidden-xs-down\\\">\\r\\n\\t\\t\\t<button class=\\\"btn btn-outline-info\\\" routerLink=\\\"/about\\\" routerLinkActive=\\\"active\\\"><i class=\\\"fa fa-info-circle\\\"></i> About</button>\\r\\n\\t\\t\\t<button class=\\\"btn btn-outline-success\\\" routerLink=\\\"/new\\\" routerLinkActive=\\\"active\\\"><i class=\\\"fa fa-plus\\\"></i> New Note</button>\\r\\n\\t\\t</div>\\r\\n\\t</nav>\\r\\n\\r\\n\\t<!-- selection toolbar -->\\r\\n\\t<div class=\\\"card card-primary fixed-top flex-row rounded-0 p-2\\\" [hidden]=\\\"selected.length == 0\\\">\\r\\n\\t\\t<button class=\\\"btn mr-auto\\\" (click)=\\\"clearSelection()\\\">{{selected.length}} Selected</button>\\r\\n\\r\\n\\t\\t<div class=\\\"btn-group ml-auto\\\">\\r\\n\\t\\t\\t<!-- <button class=\\\"btn btn-success\\\" (click)=\\\"clearSelection()\\\"><i class=\\\"fa fa-check\\\"></i><span class=\\\"hidden-xs-down\\\"> Done</span></button> -->\\r\\n\\t\\t\\t<button class=\\\"btn btn-info\\\" *ngIf=\\\"selected.length == 1\\\" (click)=\\\"editNote(selected[0])\\\"><i class=\\\"fa fa-pencil\\\"></i><span class=\\\"hidden-xs-down\\\"> Edit</span></button>\\r\\n\\t\\t\\t<button class=\\\"btn btn-danger\\\" (click)=\\\"deleteNotes(selected)\\\"><i class=\\\"fa fa-trash\\\"></i><span class=\\\"hidden-xs-down\\\"> Delete</span></button>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</header>\\r\\n\\r\\n<main class=\\\"page-content\\\">\\r\\n\\t<div class=\\\"container p-3\\\">\\r\\n\\t\\t<div class=\\\"card-columns\\\">\\r\\n\\t\\t\\t<div class=\\\"card mb-3\\\" *ngFor=\\\"let note of notes\\\" [ngClass]=\\\"{'card-outline-primary': selected.includes(note)}\\\" (click)=\\\"toggleSelected(note)\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"card-header\\\" *ngIf=\\\"note.title\\\">{{note.title}}</div>\\r\\n\\t\\t\\t\\t<div class=\\\"card-block\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"card-text markdown\\\" [innerHTML]=\\\"note.content | MarkdownToHtml\\\"></div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\r\\n\\t\\t<div class=\\\"text-center\\\" *ngIf=\\\"!notes.length\\\">\\r\\n\\t\\t\\t<h3 class=\\\"text-muted\\\">Looks like you dont have any notes</h3>\\r\\n\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-success\\\" routerLink=\\\"/new\\\">Create One?</button>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</main>\\r\\n\"\n\n/***/ },\n/* 36 */\n/***/ function(module, exports) {\n\nmodule.exports = \"<header>\\r\\n\\t<!-- nav bar -->\\r\\n\\t<nav class=\\\"card card-inverse rounded-0 flex-row p-2\\\" style=\\\"background-color: #333; border-color: #333;\\\">\\r\\n\\t\\t<h3 class=\\\"navbar-brand p-0 m-0 mr-3 hidden-xs-down\\\" routerLink=\\\"/notes\\\">Ng2 Notes</h3>\\r\\n\\r\\n\\t\\t<!-- mobile buttons -->\\r\\n\\t\\t<button class=\\\"btn btn-default mr-auto\\\" type=\\\"button\\\" routerLink=\\\"/notes\\\"><i class=\\\"fa fa-chevron-left\\\"></i> Back</button>\\r\\n\\t\\t<button class=\\\"btn mx-auto hidden-sm-up\\\" type=\\\"button\\\" (click)=\\\"toggleMobilePreview()\\\" [ngClass]=\\\"{'btn-primary': mobilePreview, 'btn-outline-primary': !mobilePreview}\\\"><i class=\\\"fa fa-eye\\\"></i> Preview</button>\\r\\n\\r\\n\\t\\t<!-- desktop buttons -->\\r\\n\\t\\t<button class=\\\"btn btn-success ml-auto\\\" type=\\\"submit\\\" [disabled]=\\\"!noteForm.form.valid\\\" form=\\\"new-note-form\\\"><i class=\\\"fa fa-check\\\"></i> <span>Save</span></button>\\r\\n\\t</nav>\\r\\n</header>\\r\\n\\r\\n<main class=\\\"page-content\\\">\\r\\n\\t<form id=\\\"new-note-form\\\" class=\\\"pt-3\\\" (ngSubmit)=\\\"createNote()\\\" #noteForm=\\\"ngForm\\\">\\r\\n\\t\\t<div class=\\\"container\\\">\\r\\n\\t\\t\\t<div class=\\\"row\\\" *ngIf=\\\"!mobilePreview\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"col-md-6 col-sm-12\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" name=\\\"title\\\" class=\\\"form-control\\\" placeholder=\\\"Title\\\" [(ngModel)]=\\\"note.title\\\" autocomplete=\\\"off\\\">\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t<textarea class=\\\"form-control\\\" name=\\\"content\\\" placeholder=\\\"Some relevant infomation\\\" [(ngModel)]=\\\"note.content\\\" required style=\\\"height: 35vh;\\\" autocomplete=\\\"off\\\"></textarea>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"col-6 hidden-sm-down\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label>Preview</label>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"card\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card-header\\\" *ngIf=\\\"note.title\\\">{{note.title}}</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card-block\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card-text markdown\\\" [innerHTML]=\\\"note.content | MarkdownToHtml\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"row\\\" *ngIf=\\\"mobilePreview\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"col-12\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"card\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"card-header\\\" *ngIf=\\\"note.title\\\">{{note.title}}</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"card-block\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card-text markdown\\\" [innerHTML]=\\\"note.content | MarkdownToHtml\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</form>\\r\\n</main>\\r\\n\"\n\n/***/ },\n/* 37 */\n/***/ function(module, exports) {\n\nmodule.exports = Dexie;\n\n/***/ },\n/* 38 */,\n/* 39 */\n/***/ function(module, exports) {\n\nmodule.exports = ng.forms;\n\n/***/ },\n/* 40 */\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\r\nvar core_1 = __webpack_require__(0);\r\nvar platform_browser_dynamic_1 = __webpack_require__(3);\r\nvar app_module_1 = __webpack_require__(14);\r\n__webpack_require__(16);\r\n// depending on the env mode, enable prod mode or add debugging modules\r\nif (true) {\r\n    core_1.enableProdMode();\r\n}\r\nfunction main() {\r\n    return platform_browser_dynamic_1.platformBrowserDynamic().bootstrapModule(app_module_1.AppModule).then(function (MODULE_REF) { if (false) {\r\n        module[\"hot\"][\"accept\"]();\r\n        if (MODULE_REF.instance[\"hmrOnInit\"]) {\r\n            module[\"hot\"][\"data\"] && MODULE_REF.instance[\"hmrOnInit\"](module[\"hot\"][\"data\"]);\r\n        }\r\n        if (MODULE_REF.instance[\"hmrOnStatus\"]) {\r\n            module[\"hot\"][\"apply\"](function (status) { MODULE_REF.instance[\"hmrOnStatus\"](status); });\r\n        }\r\n        if (MODULE_REF.instance[\"hmrOnCheck\"]) {\r\n            module[\"hot\"][\"check\"](function (err, outdatedModules) { MODULE_REF.instance[\"hmrOnCheck\"](err, outdatedModules); });\r\n        }\r\n        if (MODULE_REF.instance[\"hmrOnDecline\"]) {\r\n            module[\"hot\"][\"decline\"](function (dependencies) { MODULE_REF.instance[\"hmrOnDecline\"](dependencies); });\r\n        }\r\n        module[\"hot\"][\"dispose\"](function (store) { MODULE_REF.instance[\"hmrOnDestroy\"] && MODULE_REF.instance[\"hmrOnDestroy\"](store); MODULE_REF.destroy(); MODULE_REF.instance[\"hmrAfterDestroy\"] && MODULE_REF.instance[\"hmrAfterDestroy\"](store); });\r\n    } return MODULE_REF; });\r\n}\r\nexports.main = main;\r\nif (document.readyState === 'complete') {\r\n    main();\r\n}\r\nelse {\r\n    document.addEventListener('DOMContentLoaded', main);\r\n}\r\n\n\n/***/ }\n],[40]);\n\n\n// WEBPACK FOOTER //\n// js/app.js","export * from './note.service';\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/@angularclass/hmr-loader!./~/tslint-loader!./src/app/services/index.ts","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n\tselector: 'my-about',\r\n\ttemplate: require('./about.component.html')\r\n})\r\nexport class AboutComponent implements OnInit {\r\n\tREADME: String = require('../../../README.md');\r\n\r\n\tconstructor() {\r\n\t\t// Do stuff\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\tconsole.log('Hello About');\r\n\t}\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/@angularclass/hmr-loader!./~/tslint-loader!./src/app/about/about.component.ts","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { NoteService, Note } from '../services';\r\n\r\n@Component({\r\n\tselector: 'my-edit-note',\r\n\ttemplate: require('./edit-note.component.html')\r\n})\r\nexport class EditNoteComponent implements OnInit {\r\n\tnote: Note = new Note();\r\n\tmodal: Note = new Note();\r\n\tmobilePreview = false;\r\n\r\n\tconstructor(\r\n\t\tpublic noteService: NoteService,\r\n\t\tpublic route: ActivatedRoute,\r\n\t\tpublic router: Router\r\n\t) {}\r\n\r\n\tngOnInit() {\r\n\t\tthis.route.params\r\n\t\t\t.map((params: any) => this.noteService.getNote(+params['id']))\r\n\t\t\t.subscribe(note => {\r\n\t\t\t\tthis.note = note;\r\n\t\t\t\tthis.modal.update(note);\r\n\t\t\t});\r\n\t}\r\n\r\n\tsaveNote() {\r\n\t\tthis.noteService.updateNote(this.noteService.getNoteID(this.note), this.modal)\r\n\t\t\t.then(() => this.router.navigate(['/']));\r\n\t}\r\n\r\n\ttoggleMobilePreview() {\r\n\t\tthis.mobilePreview = !this.mobilePreview;\r\n\t}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/@angularclass/hmr-loader!./~/tslint-loader!./src/app/edit-note/edit-note.component.ts","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { NoteService, Note } from '../services';\r\n\r\n@Component({\r\n\tselector: 'my-home',\r\n\ttemplate: require('./home.component.html')\r\n})\r\nexport class HomeComponent {\r\n\tget notes(): Array<Note> {\r\n\t\treturn Array.from(this.noteService.notes).map(v => v[1]);\r\n\t};\r\n\tselected: Array<Note> = [];\r\n\r\n\tconstructor(public noteService: NoteService, public router: Router) {}\r\n\r\n\tsetSelected(note: Note, selected = true) {\r\n\t\tif (selected) {\r\n\t\t\tif (!this.selected.includes(note)) {\r\n\t\t\t\tthis.selected.push(note);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (this.selected.includes(note)) {\r\n\t\t\t\tthis.selected.splice(this.selected.indexOf(note), 1);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\ttoggleSelected(note: Note) {\r\n\t\tthis.setSelected(note, !this.selected.includes(note));\r\n\t}\r\n\r\n\tclearSelection() {\r\n\t\tthis.selected.length = 0;\r\n\t}\r\n\r\n\tdeleteNotes(notes: [Note]) {\r\n\t\tPromise.all(notes.map(note => this.noteService.deleteNote(this.noteService.getNoteID(note)))).then(() => {\r\n\t\t\tthis.selected = this.selected.filter(note => !notes.includes(note));\r\n\t\t}).catch(() => {\r\n\t\t\t// error\r\n\t\t\tthis.clearSelection();\r\n\t\t});\r\n\t}\r\n\r\n\teditNote(note: Note) {\r\n\t\tthis.router.navigate(['/edit', this.noteService.getNoteID(note)]);\r\n\t}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/@angularclass/hmr-loader!./~/tslint-loader!./src/app/home/home.component.ts","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { NoteService, Note } from '../services';\r\n\r\n@Component({\r\n\tselector: 'my-note-form',\r\n\ttemplate: require('./note-form.component.html')\r\n})\r\nexport class NoteFormComponent {\r\n\tloading = false;\r\n\tmobilePreview = false;\r\n\r\n\tnote: Note = new Note();\r\n\r\n\tconstructor(public noteService: NoteService, public router: Router) {}\r\n\r\n\tcreateNote() {\r\n\t\tthis.loading = true;\r\n\t\tthis.noteService.createNote(this.note)\r\n\t\t\t.finally(() => this.loading = false)\r\n\t\t\t.then(() => this.router.navigate(['/']));\r\n\t}\r\n\r\n\ttoggleMobilePreview() {\r\n\t\tthis.mobilePreview = !this.mobilePreview;\r\n\t}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/@angularclass/hmr-loader!./~/tslint-loader!./src/app/note-form/note-form.component.ts","\"use strict\";\nvar core_1 = require('@angular/core');\nvar marked = require('marked');\nvar MarkdownToHtmlPipe = (function () {\n    function MarkdownToHtmlPipe() {\n    }\n    MarkdownToHtmlPipe.prototype.transform = function (markdown, options) {\n        if (markdown == null)\n            return '';\n        return marked(markdown, options);\n    };\n    MarkdownToHtmlPipe.setOptions = function (options) {\n        marked.setOptions(options);\n    };\n    MarkdownToHtmlPipe.decorators = [\n        { type: core_1.Pipe, args: [{\n                    name: 'MarkdownToHtml'\n                },] },\n    ];\n    /** @nocollapse */\n    MarkdownToHtmlPipe.ctorParameters = [];\n    return MarkdownToHtmlPipe;\n}());\nexports.MarkdownToHtmlPipe = MarkdownToHtmlPipe;\n//# sourceMappingURL=markdown-to-html.pipe.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/markdown-to-html-pipe/src/markdown-to-html.pipe.js\n// module id = 12\n// module chunks = 0","import { NgModule, ApplicationRef } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpModule } from '@angular/http';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { MarkdownToHtmlPipe } from 'markdown-to-html-pipe';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { NoteFormComponent } from './note-form/note-form.component';\r\nimport { EditNoteComponent } from './edit-note/edit-note.component';\r\nimport { AboutComponent } from './about/about.component';\r\nimport { NoteService } from './services';\r\nimport { routing } from './app.routing';\r\n\r\nimport { removeNgStyles, createNewHosts } from '@angularclass/hmr';\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tBrowserModule,\r\n\t\tHttpModule,\r\n\t\tFormsModule,\r\n\t\trouting\r\n\t],\r\n\tdeclarations: [\r\n\t\tAppComponent,\r\n\t\tHomeComponent,\r\n\t\tAboutComponent,\r\n\t\tNoteFormComponent,\r\n\t\tEditNoteComponent,\r\n\r\n\t\tMarkdownToHtmlPipe\r\n\t],\r\n\tproviders: [\r\n\t\tNoteService\r\n\t],\r\n\tbootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n\tconstructor(public appRef: ApplicationRef) {}\r\n\thmrOnInit(store) {\r\n\t\tconsole.log('HMR store', store);\r\n\t}\r\n\thmrOnDestroy(store) {\r\n\t\tlet cmpLocation = this.appRef.components.map(cmp => cmp.location.nativeElement);\r\n\t\t// recreate elements\r\n\t\tstore.disposeOldHosts = createNewHosts(cmpLocation);\r\n\t\t// remove styles\r\n\t\tremoveNgStyles();\r\n\t}\r\n\thmrAfterDestroy(store) {\r\n\t\t// display new elements\r\n\t\tstore.disposeOldHosts();\r\n\t\tdelete store.disposeOldHosts;\r\n\t}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/@angularclass/hmr-loader!./~/tslint-loader!./src/app/app.module.ts","import { Component } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { NoteService } from './services';\r\n\r\n@Component({\r\n\tselector: 'my-app', // <my-app></my-app>\r\n\ttemplate: require('./app.component.html'),\r\n\tstyles: [require('./app.component.scss')],\r\n})\r\nexport class AppComponent {\r\n\tconstructor(public noteService: NoteService, public route: ActivatedRoute) {}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/@angularclass/hmr-loader!./~/tslint-loader!./src/app/app.component.ts","import { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { HomeComponent } from './home/home.component';\r\nimport { AboutComponent } from './about/about.component';\r\nimport { EditNoteComponent } from './edit-note/edit-note.component';\r\nimport { NoteFormComponent } from './note-form/note-form.component';\r\n\r\nconst routes: Routes = [\r\n\t{ path: '', component: HomeComponent },\r\n\t{ path: 'notes', component: HomeComponent },\r\n\t{ path: 'about', component: AboutComponent},\r\n\t{ path: 'new', component: NoteFormComponent},\r\n\t{ path: 'edit/:id', component: EditNoteComponent}\r\n];\r\n\r\nexport const routing = RouterModule.forRoot(routes, {\r\n\tuseHash: true\r\n});\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/@angularclass/hmr-loader!./~/tslint-loader!./src/app/app.routing.ts","import { Injectable } from '@angular/core';\r\nimport Dexie from 'dexie';\r\n\r\nexport interface NoteData {\r\n\tid?: number;\r\n\ttitle?: String;\r\n\tcontent?: String;\r\n\tcreated?: Date;\r\n\tupdated?: Date;\r\n\tdone?: boolean;\r\n}\r\n\r\n@Injectable()\r\nexport class NoteService {\r\n\tpublic db: Dexie;\r\n\tpublic notes: Map<number, Note> = new Map<number, Note>();\r\n\r\n\tconstructor() {\r\n\t\tthis.db = new Dexie('ng2-notes');\r\n\r\n\t\t// set up db\r\n\t\tthis.db.version(1).stores({\r\n\t\t\tnotes: '++id, title, content, created, updated'\r\n\t\t});\r\n\r\n\t\tthis.loadNotes().then(notes => {\r\n\t\t\tif (!notes.size) {\r\n\t\t\t\tPromise.all([\r\n\t\t\t\t\tthis.createNote(new Note({\r\n\t\t\t\t\t\tcontent: 'Learn Angular2',\r\n\t\t\t\t\t\tdone: true\r\n\t\t\t\t\t})),\r\n\t\t\t\t\tthis.createNote(new Note({\r\n\t\t\t\t\t\ttitle: 'Create Demo Application',\r\n\t\t\t\t\t\tcontent: `\r\n - Think of an application to build\r\n - set up project\r\n - finish project`,\r\n\t\t\t\t\t\tdone: true\r\n\t\t\t\t\t}))\r\n\t\t\t\t]).then(() => {\r\n\t\t\t\t\tconsole.log('demo notes created');\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tloadNotes(): Dexie.Promise<Map<number, Note>> {\r\n\t\treturn this.db.table('notes').toArray().then(entries => {\r\n\t\t\tentries.forEach(data => {\r\n\t\t\t\tlet note = new Note(<NoteData>data);\r\n\t\t\t\tthis.notes.set(data.id, note);\r\n\t\t\t});\r\n\r\n\t\t\treturn this.notes;\r\n\t\t});\r\n\t}\r\n\r\n\thasNote(id: number): boolean {\r\n\t\treturn this.notes.has(id);\r\n\t}\r\n\r\n\tgetNote(id: number): Note {\r\n\t\treturn this.notes.get(id);\r\n\t}\r\n\r\n\tgetNoteID(note: Note): number {\r\n\t\tlet entries = this.notes.entries(), entry;\r\n\t\twhile (entry = entries.next().value) {\r\n\t\t\tif (entry[1] === note) {\r\n\t\t\t\treturn entry[0];\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n\r\n\tdeleteNote(id: number) {\r\n\t\tif (this.hasNote(id)) {\r\n\t\t\t// remote it from the db\r\n\t\t\treturn this.db.table('notes').delete(id).then(() => {\r\n\t\t\t\t// remote it from the map\r\n\t\t\t\tthis.notes.delete(id);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn Dexie.Promise.reject(new Error('no note with that id'));\r\n\t}\r\n\r\n\tcreateNote(data: NoteData) {\r\n\t\tlet note = new Note(data);\r\n\r\n\t\t// add the note to the db and the array\r\n\t\treturn this.db.table('notes').put(note).then(id => {\r\n\t\t\t// add it to the map\r\n\t\t\tthis.notes.set(id, note);\r\n\t\t\treturn note;\r\n\t\t});\r\n\t}\r\n\r\n\tupdateNote(id: any, data: NoteData) {\r\n\t\tlet note = this.getNote(id);\r\n\t\tnote.update(data);\r\n\r\n\t\t// save the note\r\n\t\treturn this.db.table('notes').put(note);\r\n\t}\r\n}\r\n\r\nexport class Note implements NoteData {\r\n\ttitle: String = '';\r\n\tcontent: String = '';\r\n\tdone = false;\r\n\tcreated: Date = new Date();\r\n\tupdated: Date = new Date();\r\n\r\n\tconstructor(data?: NoteData) {\r\n\t\tif (data) {\r\n\t\t\tthis.update(data);\r\n\t\t}\r\n\t}\r\n\r\n\tupdate(data: NoteData) {\r\n\t\tif (!data.created) {\r\n\t\t\tthis.created = new Date(data.created);\r\n\t\t}\r\n\t\tif (!data.updated) {\r\n\t\t\tthis.updated = new Date(data.updated);\r\n\t\t}\r\n\t\tif (data.done !== undefined) {\r\n\t\t\tthis.done = data.done;\r\n\t\t}\r\n\r\n\t\tthis.title = data.title || this.title;\r\n\t\tthis.content = data.content || this.content;\r\n\t}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/@angularclass/hmr-loader!./~/tslint-loader!./src/app/services/note.service.ts","module.exports = \"<h1 id=\\\"ng2-notes\\\">Ng2-notes</h1>\\n<p>A simple demo project built with <a href=\\\"https://angular.io\\\">angular2</a> using <a href=\\\"https://github.com/preboot/angular2-webpack\\\">angular2-webpack</a></p>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./README.md\n// module id = 27\n// module chunks = 0","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n__export(require('./src/markdown-to-html.pipe'));\nvar core_1 = require('@angular/core');\nvar markdown_to_html_pipe_2 = require('./src/markdown-to-html.pipe');\nvar MarkdownToHtmlModule = (function () {\n    function MarkdownToHtmlModule() {\n    }\n    MarkdownToHtmlModule.decorators = [\n        { type: core_1.NgModule, args: [{\n                    declarations: [markdown_to_html_pipe_2.MarkdownToHtmlPipe],\n                    exports: [markdown_to_html_pipe_2.MarkdownToHtmlPipe]\n                },] },\n    ];\n    /** @nocollapse */\n    MarkdownToHtmlModule.ctorParameters = [];\n    return MarkdownToHtmlModule;\n}());\nexports.MarkdownToHtmlModule = MarkdownToHtmlModule;\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/markdown-to-html-pipe/index.js\n// module id = 28\n// module chunks = 0","/**\n * marked - a markdown parser\n * Copyright (c) 2011-2014, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/chjj/marked\n */\n\n;(function() {\n\n/**\n * Block-Level Grammar\n */\n\nvar block = {\n  newline: /^\\n+/,\n  code: /^( {4}[^\\n]+\\n*)+/,\n  fences: noop,\n  hr: /^( *[-*_]){3,} *(?:\\n+|$)/,\n  heading: /^ *(#{1,6}) *([^\\n]+?) *#* *(?:\\n+|$)/,\n  nptable: noop,\n  lheading: /^([^\\n]+)\\n *(=|-){2,} *(?:\\n+|$)/,\n  blockquote: /^( *>[^\\n]+(\\n(?!def)[^\\n]+)*\\n*)+/,\n  list: /^( *)(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\n  html: /^ *(?:comment *(?:\\n|\\s*$)|closed *(?:\\n{2,}|\\s*$)|closing *(?:\\n{2,}|\\s*$))/,\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +[\"(]([^\\n]+)[\")])? *(?:\\n+|$)/,\n  table: noop,\n  paragraph: /^((?:[^\\n]+\\n?(?!hr|heading|lheading|blockquote|tag|def))+)\\n*/,\n  text: /^[^\\n]+/\n};\n\nblock.bullet = /(?:[*+-]|\\d+\\.)/;\nblock.item = /^( *)(bull) [^\\n]*(?:\\n(?!\\1bull )[^\\n]*)*/;\nblock.item = replace(block.item, 'gm')\n  (/bull/g, block.bullet)\n  ();\n\nblock.list = replace(block.list)\n  (/bull/g, block.bullet)\n  ('hr', '\\\\n+(?=\\\\1?(?:[-*_] *){3,}(?:\\\\n+|$))')\n  ('def', '\\\\n+(?=' + block.def.source + ')')\n  ();\n\nblock.blockquote = replace(block.blockquote)\n  ('def', block.def)\n  ();\n\nblock._tag = '(?!(?:'\n  + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code'\n  + '|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo'\n  + '|span|br|wbr|ins|del|img)\\\\b)\\\\w+(?!:/|[^\\\\w\\\\s@]*@)\\\\b';\n\nblock.html = replace(block.html)\n  ('comment', /<!--[\\s\\S]*?-->/)\n  ('closed', /<(tag)[\\s\\S]+?<\\/\\1>/)\n  ('closing', /<tag(?:\"[^\"]*\"|'[^']*'|[^'\">])*?>/)\n  (/tag/g, block._tag)\n  ();\n\nblock.paragraph = replace(block.paragraph)\n  ('hr', block.hr)\n  ('heading', block.heading)\n  ('lheading', block.lheading)\n  ('blockquote', block.blockquote)\n  ('tag', '<' + block._tag)\n  ('def', block.def)\n  ();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = merge({}, block);\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = merge({}, block.normal, {\n  fences: /^ *(`{3,}|~{3,})[ \\.]*(\\S+)? *\\n([\\s\\S]*?)\\s*\\1 *(?:\\n+|$)/,\n  paragraph: /^/,\n  heading: /^ *(#{1,6}) +([^\\n]+?) *#* *(?:\\n+|$)/\n});\n\nblock.gfm.paragraph = replace(block.paragraph)\n  ('(?!', '(?!'\n    + block.gfm.fences.source.replace('\\\\1', '\\\\2') + '|'\n    + block.list.source.replace('\\\\1', '\\\\3') + '|')\n  ();\n\n/**\n * GFM + Tables Block Grammar\n */\n\nblock.tables = merge({}, block.gfm, {\n  nptable: /^ *(\\S.*\\|.*)\\n *([-:]+ *\\|[-| :]*)\\n((?:.*\\|.*(?:\\n|$))*)\\n*/,\n  table: /^ *\\|(.+)\\n *\\|( *[-:]+[-| :]*)\\n((?: *\\|.*(?:\\n|$))*)\\n*/\n});\n\n/**\n * Block Lexer\n */\n\nfunction Lexer(options) {\n  this.tokens = [];\n  this.tokens.links = {};\n  this.options = options || marked.defaults;\n  this.rules = block.normal;\n\n  if (this.options.gfm) {\n    if (this.options.tables) {\n      this.rules = block.tables;\n    } else {\n      this.rules = block.gfm;\n    }\n  }\n}\n\n/**\n * Expose Block Rules\n */\n\nLexer.rules = block;\n\n/**\n * Static Lex Method\n */\n\nLexer.lex = function(src, options) {\n  var lexer = new Lexer(options);\n  return lexer.lex(src);\n};\n\n/**\n * Preprocessing\n */\n\nLexer.prototype.lex = function(src) {\n  src = src\n    .replace(/\\r\\n|\\r/g, '\\n')\n    .replace(/\\t/g, '    ')\n    .replace(/\\u00a0/g, ' ')\n    .replace(/\\u2424/g, '\\n');\n\n  return this.token(src, true);\n};\n\n/**\n * Lexing\n */\n\nLexer.prototype.token = function(src, top, bq) {\n  var src = src.replace(/^ +$/gm, '')\n    , next\n    , loose\n    , cap\n    , bull\n    , b\n    , item\n    , space\n    , i\n    , l;\n\n  while (src) {\n    // newline\n    if (cap = this.rules.newline.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[0].length > 1) {\n        this.tokens.push({\n          type: 'space'\n        });\n      }\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      cap = cap[0].replace(/^ {4}/gm, '');\n      this.tokens.push({\n        type: 'code',\n        text: !this.options.pedantic\n          ? cap.replace(/\\n+$/, '')\n          : cap\n      });\n      continue;\n    }\n\n    // fences (gfm)\n    if (cap = this.rules.fences.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'code',\n        lang: cap[2],\n        text: cap[3] || ''\n      });\n      continue;\n    }\n\n    // heading\n    if (cap = this.rules.heading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[1].length,\n        text: cap[2]\n      });\n      continue;\n    }\n\n    // table no leading pipe (gfm)\n    if (top && (cap = this.rules.nptable.exec(src))) {\n      src = src.substring(cap[0].length);\n\n      item = {\n        type: 'table',\n        header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3].replace(/\\n$/, '').split('\\n')\n      };\n\n      for (i = 0; i < item.align.length; i++) {\n        if (/^ *-+: *$/.test(item.align[i])) {\n          item.align[i] = 'right';\n        } else if (/^ *:-+: *$/.test(item.align[i])) {\n          item.align[i] = 'center';\n        } else if (/^ *:-+ *$/.test(item.align[i])) {\n          item.align[i] = 'left';\n        } else {\n          item.align[i] = null;\n        }\n      }\n\n      for (i = 0; i < item.cells.length; i++) {\n        item.cells[i] = item.cells[i].split(/ *\\| */);\n      }\n\n      this.tokens.push(item);\n\n      continue;\n    }\n\n    // lheading\n    if (cap = this.rules.lheading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[2] === '=' ? 1 : 2,\n        text: cap[1]\n      });\n      continue;\n    }\n\n    // hr\n    if (cap = this.rules.hr.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'hr'\n      });\n      continue;\n    }\n\n    // blockquote\n    if (cap = this.rules.blockquote.exec(src)) {\n      src = src.substring(cap[0].length);\n\n      this.tokens.push({\n        type: 'blockquote_start'\n      });\n\n      cap = cap[0].replace(/^ *> ?/gm, '');\n\n      // Pass `top` to keep the current\n      // \"toplevel\" state. This is exactly\n      // how markdown.pl works.\n      this.token(cap, top, true);\n\n      this.tokens.push({\n        type: 'blockquote_end'\n      });\n\n      continue;\n    }\n\n    // list\n    if (cap = this.rules.list.exec(src)) {\n      src = src.substring(cap[0].length);\n      bull = cap[2];\n\n      this.tokens.push({\n        type: 'list_start',\n        ordered: bull.length > 1\n      });\n\n      // Get each top-level item.\n      cap = cap[0].match(this.rules.item);\n\n      next = false;\n      l = cap.length;\n      i = 0;\n\n      for (; i < l; i++) {\n        item = cap[i];\n\n        // Remove the list item's bullet\n        // so it is seen as the next token.\n        space = item.length;\n        item = item.replace(/^ *([*+-]|\\d+\\.) +/, '');\n\n        // Outdent whatever the\n        // list item contains. Hacky.\n        if (~item.indexOf('\\n ')) {\n          space -= item.length;\n          item = !this.options.pedantic\n            ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '')\n            : item.replace(/^ {1,4}/gm, '');\n        }\n\n        // Determine whether the next list item belongs here.\n        // Backpedal if it does not belong in this list.\n        if (this.options.smartLists && i !== l - 1) {\n          b = block.bullet.exec(cap[i + 1])[0];\n          if (bull !== b && !(bull.length > 1 && b.length > 1)) {\n            src = cap.slice(i + 1).join('\\n') + src;\n            i = l - 1;\n          }\n        }\n\n        // Determine whether item is loose or not.\n        // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n        // for discount behavior.\n        loose = next || /\\n\\n(?!\\s*$)/.test(item);\n        if (i !== l - 1) {\n          next = item.charAt(item.length - 1) === '\\n';\n          if (!loose) loose = next;\n        }\n\n        this.tokens.push({\n          type: loose\n            ? 'loose_item_start'\n            : 'list_item_start'\n        });\n\n        // Recurse.\n        this.token(item, false, bq);\n\n        this.tokens.push({\n          type: 'list_item_end'\n        });\n      }\n\n      this.tokens.push({\n        type: 'list_end'\n      });\n\n      continue;\n    }\n\n    // html\n    if (cap = this.rules.html.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: this.options.sanitize\n          ? 'paragraph'\n          : 'html',\n        pre: !this.options.sanitizer\n          && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n        text: cap[0]\n      });\n      continue;\n    }\n\n    // def\n    if ((!bq && top) && (cap = this.rules.def.exec(src))) {\n      src = src.substring(cap[0].length);\n      this.tokens.links[cap[1].toLowerCase()] = {\n        href: cap[2],\n        title: cap[3]\n      };\n      continue;\n    }\n\n    // table (gfm)\n    if (top && (cap = this.rules.table.exec(src))) {\n      src = src.substring(cap[0].length);\n\n      item = {\n        type: 'table',\n        header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3].replace(/(?: *\\| *)?\\n$/, '').split('\\n')\n      };\n\n      for (i = 0; i < item.align.length; i++) {\n        if (/^ *-+: *$/.test(item.align[i])) {\n          item.align[i] = 'right';\n        } else if (/^ *:-+: *$/.test(item.align[i])) {\n          item.align[i] = 'center';\n        } else if (/^ *:-+ *$/.test(item.align[i])) {\n          item.align[i] = 'left';\n        } else {\n          item.align[i] = null;\n        }\n      }\n\n      for (i = 0; i < item.cells.length; i++) {\n        item.cells[i] = item.cells[i]\n          .replace(/^ *\\| *| *\\| *$/g, '')\n          .split(/ *\\| */);\n      }\n\n      this.tokens.push(item);\n\n      continue;\n    }\n\n    // top-level paragraph\n    if (top && (cap = this.rules.paragraph.exec(src))) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'paragraph',\n        text: cap[1].charAt(cap[1].length - 1) === '\\n'\n          ? cap[1].slice(0, -1)\n          : cap[1]\n      });\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      // Top-level should never reach here.\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'text',\n        text: cap[0]\n      });\n      continue;\n    }\n\n    if (src) {\n      throw new\n        Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return this.tokens;\n};\n\n/**\n * Inline-Level Grammar\n */\n\nvar inline = {\n  escape: /^\\\\([\\\\`*{}\\[\\]()#+\\-.!_>])/,\n  autolink: /^<([^ >]+(@|:\\/)[^ >]+)>/,\n  url: noop,\n  tag: /^<!--[\\s\\S]*?-->|^<\\/?\\w+(?:\"[^\"]*\"|'[^']*'|[^'\">])*?>/,\n  link: /^!?\\[(inside)\\]\\(href\\)/,\n  reflink: /^!?\\[(inside)\\]\\s*\\[([^\\]]*)\\]/,\n  nolink: /^!?\\[((?:\\[[^\\]]*\\]|[^\\[\\]])*)\\]/,\n  strong: /^__([\\s\\S]+?)__(?!_)|^\\*\\*([\\s\\S]+?)\\*\\*(?!\\*)/,\n  em: /^\\b_((?:[^_]|__)+?)_\\b|^\\*((?:\\*\\*|[\\s\\S])+?)\\*(?!\\*)/,\n  code: /^(`+)\\s*([\\s\\S]*?[^`])\\s*\\1(?!`)/,\n  br: /^ {2,}\\n(?!\\s*$)/,\n  del: noop,\n  text: /^[\\s\\S]+?(?=[\\\\<!\\[_*`]| {2,}\\n|$)/\n};\n\ninline._inside = /(?:\\[[^\\]]*\\]|[^\\[\\]]|\\](?=[^\\[]*\\]))*/;\ninline._href = /\\s*<?([\\s\\S]*?)>?(?:\\s+['\"]([\\s\\S]*?)['\"])?\\s*/;\n\ninline.link = replace(inline.link)\n  ('inside', inline._inside)\n  ('href', inline._href)\n  ();\n\ninline.reflink = replace(inline.reflink)\n  ('inside', inline._inside)\n  ();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = merge({}, inline);\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = merge({}, inline.normal, {\n  strong: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n  em: /^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/\n});\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = merge({}, inline.normal, {\n  escape: replace(inline.escape)('])', '~|])')(),\n  url: /^(https?:\\/\\/[^\\s<]+[^<.,:;\"')\\]\\s])/,\n  del: /^~~(?=\\S)([\\s\\S]*?\\S)~~/,\n  text: replace(inline.text)\n    (']|', '~]|')\n    ('|', '|https?://|')\n    ()\n});\n\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = merge({}, inline.gfm, {\n  br: replace(inline.br)('{2,}', '*')(),\n  text: replace(inline.gfm.text)('{2,}', '*')()\n});\n\n/**\n * Inline Lexer & Compiler\n */\n\nfunction InlineLexer(links, options) {\n  this.options = options || marked.defaults;\n  this.links = links;\n  this.rules = inline.normal;\n  this.renderer = this.options.renderer || new Renderer;\n  this.renderer.options = this.options;\n\n  if (!this.links) {\n    throw new\n      Error('Tokens array requires a `links` property.');\n  }\n\n  if (this.options.gfm) {\n    if (this.options.breaks) {\n      this.rules = inline.breaks;\n    } else {\n      this.rules = inline.gfm;\n    }\n  } else if (this.options.pedantic) {\n    this.rules = inline.pedantic;\n  }\n}\n\n/**\n * Expose Inline Rules\n */\n\nInlineLexer.rules = inline;\n\n/**\n * Static Lexing/Compiling Method\n */\n\nInlineLexer.output = function(src, links, options) {\n  var inline = new InlineLexer(links, options);\n  return inline.output(src);\n};\n\n/**\n * Lexing/Compiling\n */\n\nInlineLexer.prototype.output = function(src) {\n  var out = ''\n    , link\n    , text\n    , href\n    , cap;\n\n  while (src) {\n    // escape\n    if (cap = this.rules.escape.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += cap[1];\n      continue;\n    }\n\n    // autolink\n    if (cap = this.rules.autolink.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[2] === '@') {\n        text = cap[1].charAt(6) === ':'\n          ? this.mangle(cap[1].substring(7))\n          : this.mangle(cap[1]);\n        href = this.mangle('mailto:') + text;\n      } else {\n        text = escape(cap[1]);\n        href = text;\n      }\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // url (gfm)\n    if (!this.inLink && (cap = this.rules.url.exec(src))) {\n      src = src.substring(cap[0].length);\n      text = escape(cap[1]);\n      href = text;\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // tag\n    if (cap = this.rules.tag.exec(src)) {\n      if (!this.inLink && /^<a /i.test(cap[0])) {\n        this.inLink = true;\n      } else if (this.inLink && /^<\\/a>/i.test(cap[0])) {\n        this.inLink = false;\n      }\n      src = src.substring(cap[0].length);\n      out += this.options.sanitize\n        ? this.options.sanitizer\n          ? this.options.sanitizer(cap[0])\n          : escape(cap[0])\n        : cap[0]\n      continue;\n    }\n\n    // link\n    if (cap = this.rules.link.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.inLink = true;\n      out += this.outputLink(cap, {\n        href: cap[2],\n        title: cap[3]\n      });\n      this.inLink = false;\n      continue;\n    }\n\n    // reflink, nolink\n    if ((cap = this.rules.reflink.exec(src))\n        || (cap = this.rules.nolink.exec(src))) {\n      src = src.substring(cap[0].length);\n      link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      link = this.links[link.toLowerCase()];\n      if (!link || !link.href) {\n        out += cap[0].charAt(0);\n        src = cap[0].substring(1) + src;\n        continue;\n      }\n      this.inLink = true;\n      out += this.outputLink(cap, link);\n      this.inLink = false;\n      continue;\n    }\n\n    // strong\n    if (cap = this.rules.strong.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.strong(this.output(cap[2] || cap[1]));\n      continue;\n    }\n\n    // em\n    if (cap = this.rules.em.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.em(this.output(cap[2] || cap[1]));\n      continue;\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.codespan(escape(cap[2], true));\n      continue;\n    }\n\n    // br\n    if (cap = this.rules.br.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.br();\n      continue;\n    }\n\n    // del (gfm)\n    if (cap = this.rules.del.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.del(this.output(cap[1]));\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.text(escape(this.smartypants(cap[0])));\n      continue;\n    }\n\n    if (src) {\n      throw new\n        Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return out;\n};\n\n/**\n * Compile Link\n */\n\nInlineLexer.prototype.outputLink = function(cap, link) {\n  var href = escape(link.href)\n    , title = link.title ? escape(link.title) : null;\n\n  return cap[0].charAt(0) !== '!'\n    ? this.renderer.link(href, title, this.output(cap[1]))\n    : this.renderer.image(href, title, escape(cap[1]));\n};\n\n/**\n * Smartypants Transformations\n */\n\nInlineLexer.prototype.smartypants = function(text) {\n  if (!this.options.smartypants) return text;\n  return text\n    // em-dashes\n    .replace(/---/g, '\\u2014')\n    // en-dashes\n    .replace(/--/g, '\\u2013')\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n    // closing singles & apostrophes\n    .replace(/'/g, '\\u2019')\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n    // closing doubles\n    .replace(/\"/g, '\\u201d')\n    // ellipses\n    .replace(/\\.{3}/g, '\\u2026');\n};\n\n/**\n * Mangle Links\n */\n\nInlineLexer.prototype.mangle = function(text) {\n  if (!this.options.mangle) return text;\n  var out = ''\n    , l = text.length\n    , i = 0\n    , ch;\n\n  for (; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n};\n\n/**\n * Renderer\n */\n\nfunction Renderer(options) {\n  this.options = options || {};\n}\n\nRenderer.prototype.code = function(code, lang, escaped) {\n  if (this.options.highlight) {\n    var out = this.options.highlight(code, lang);\n    if (out != null && out !== code) {\n      escaped = true;\n      code = out;\n    }\n  }\n\n  if (!lang) {\n    return '<pre><code>'\n      + (escaped ? code : escape(code, true))\n      + '\\n</code></pre>';\n  }\n\n  return '<pre><code class=\"'\n    + this.options.langPrefix\n    + escape(lang, true)\n    + '\">'\n    + (escaped ? code : escape(code, true))\n    + '\\n</code></pre>\\n';\n};\n\nRenderer.prototype.blockquote = function(quote) {\n  return '<blockquote>\\n' + quote + '</blockquote>\\n';\n};\n\nRenderer.prototype.html = function(html) {\n  return html;\n};\n\nRenderer.prototype.heading = function(text, level, raw) {\n  return '<h'\n    + level\n    + ' id=\"'\n    + this.options.headerPrefix\n    + raw.toLowerCase().replace(/[^\\w]+/g, '-')\n    + '\">'\n    + text\n    + '</h'\n    + level\n    + '>\\n';\n};\n\nRenderer.prototype.hr = function() {\n  return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n};\n\nRenderer.prototype.list = function(body, ordered) {\n  var type = ordered ? 'ol' : 'ul';\n  return '<' + type + '>\\n' + body + '</' + type + '>\\n';\n};\n\nRenderer.prototype.listitem = function(text) {\n  return '<li>' + text + '</li>\\n';\n};\n\nRenderer.prototype.paragraph = function(text) {\n  return '<p>' + text + '</p>\\n';\n};\n\nRenderer.prototype.table = function(header, body) {\n  return '<table>\\n'\n    + '<thead>\\n'\n    + header\n    + '</thead>\\n'\n    + '<tbody>\\n'\n    + body\n    + '</tbody>\\n'\n    + '</table>\\n';\n};\n\nRenderer.prototype.tablerow = function(content) {\n  return '<tr>\\n' + content + '</tr>\\n';\n};\n\nRenderer.prototype.tablecell = function(content, flags) {\n  var type = flags.header ? 'th' : 'td';\n  var tag = flags.align\n    ? '<' + type + ' style=\"text-align:' + flags.align + '\">'\n    : '<' + type + '>';\n  return tag + content + '</' + type + '>\\n';\n};\n\n// span level renderer\nRenderer.prototype.strong = function(text) {\n  return '<strong>' + text + '</strong>';\n};\n\nRenderer.prototype.em = function(text) {\n  return '<em>' + text + '</em>';\n};\n\nRenderer.prototype.codespan = function(text) {\n  return '<code>' + text + '</code>';\n};\n\nRenderer.prototype.br = function() {\n  return this.options.xhtml ? '<br/>' : '<br>';\n};\n\nRenderer.prototype.del = function(text) {\n  return '<del>' + text + '</del>';\n};\n\nRenderer.prototype.link = function(href, title, text) {\n  if (this.options.sanitize) {\n    try {\n      var prot = decodeURIComponent(unescape(href))\n        .replace(/[^\\w:]/g, '')\n        .toLowerCase();\n    } catch (e) {\n      return '';\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0) {\n      return '';\n    }\n  }\n  var out = '<a href=\"' + href + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += '>' + text + '</a>';\n  return out;\n};\n\nRenderer.prototype.image = function(href, title, text) {\n  var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += this.options.xhtml ? '/>' : '>';\n  return out;\n};\n\nRenderer.prototype.text = function(text) {\n  return text;\n};\n\n/**\n * Parsing & Compiling\n */\n\nfunction Parser(options) {\n  this.tokens = [];\n  this.token = null;\n  this.options = options || marked.defaults;\n  this.options.renderer = this.options.renderer || new Renderer;\n  this.renderer = this.options.renderer;\n  this.renderer.options = this.options;\n}\n\n/**\n * Static Parse Method\n */\n\nParser.parse = function(src, options, renderer) {\n  var parser = new Parser(options, renderer);\n  return parser.parse(src);\n};\n\n/**\n * Parse Loop\n */\n\nParser.prototype.parse = function(src) {\n  this.inline = new InlineLexer(src.links, this.options, this.renderer);\n  this.tokens = src.reverse();\n\n  var out = '';\n  while (this.next()) {\n    out += this.tok();\n  }\n\n  return out;\n};\n\n/**\n * Next Token\n */\n\nParser.prototype.next = function() {\n  return this.token = this.tokens.pop();\n};\n\n/**\n * Preview Next Token\n */\n\nParser.prototype.peek = function() {\n  return this.tokens[this.tokens.length - 1] || 0;\n};\n\n/**\n * Parse Text Tokens\n */\n\nParser.prototype.parseText = function() {\n  var body = this.token.text;\n\n  while (this.peek().type === 'text') {\n    body += '\\n' + this.next().text;\n  }\n\n  return this.inline.output(body);\n};\n\n/**\n * Parse Current Token\n */\n\nParser.prototype.tok = function() {\n  switch (this.token.type) {\n    case 'space': {\n      return '';\n    }\n    case 'hr': {\n      return this.renderer.hr();\n    }\n    case 'heading': {\n      return this.renderer.heading(\n        this.inline.output(this.token.text),\n        this.token.depth,\n        this.token.text);\n    }\n    case 'code': {\n      return this.renderer.code(this.token.text,\n        this.token.lang,\n        this.token.escaped);\n    }\n    case 'table': {\n      var header = ''\n        , body = ''\n        , i\n        , row\n        , cell\n        , flags\n        , j;\n\n      // header\n      cell = '';\n      for (i = 0; i < this.token.header.length; i++) {\n        flags = { header: true, align: this.token.align[i] };\n        cell += this.renderer.tablecell(\n          this.inline.output(this.token.header[i]),\n          { header: true, align: this.token.align[i] }\n        );\n      }\n      header += this.renderer.tablerow(cell);\n\n      for (i = 0; i < this.token.cells.length; i++) {\n        row = this.token.cells[i];\n\n        cell = '';\n        for (j = 0; j < row.length; j++) {\n          cell += this.renderer.tablecell(\n            this.inline.output(row[j]),\n            { header: false, align: this.token.align[j] }\n          );\n        }\n\n        body += this.renderer.tablerow(cell);\n      }\n      return this.renderer.table(header, body);\n    }\n    case 'blockquote_start': {\n      var body = '';\n\n      while (this.next().type !== 'blockquote_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.blockquote(body);\n    }\n    case 'list_start': {\n      var body = ''\n        , ordered = this.token.ordered;\n\n      while (this.next().type !== 'list_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.list(body, ordered);\n    }\n    case 'list_item_start': {\n      var body = '';\n\n      while (this.next().type !== 'list_item_end') {\n        body += this.token.type === 'text'\n          ? this.parseText()\n          : this.tok();\n      }\n\n      return this.renderer.listitem(body);\n    }\n    case 'loose_item_start': {\n      var body = '';\n\n      while (this.next().type !== 'list_item_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.listitem(body);\n    }\n    case 'html': {\n      var html = !this.token.pre && !this.options.pedantic\n        ? this.inline.output(this.token.text)\n        : this.token.text;\n      return this.renderer.html(html);\n    }\n    case 'paragraph': {\n      return this.renderer.paragraph(this.inline.output(this.token.text));\n    }\n    case 'text': {\n      return this.renderer.paragraph(this.parseText());\n    }\n  }\n};\n\n/**\n * Helpers\n */\n\nfunction escape(html, encode) {\n  return html\n    .replace(!encode ? /&(?!#?\\w+;)/g : /&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#39;');\n}\n\nfunction unescape(html) {\n\t// explicitly match decimal, hex, and named HTML entities \n  return html.replace(/&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/g, function(_, n) {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nfunction replace(regex, opt) {\n  regex = regex.source;\n  opt = opt || '';\n  return function self(name, val) {\n    if (!name) return new RegExp(regex, opt);\n    val = val.source || val;\n    val = val.replace(/(^|[^\\[])\\^/g, '$1');\n    regex = regex.replace(name, val);\n    return self;\n  };\n}\n\nfunction noop() {}\nnoop.exec = noop;\n\nfunction merge(obj) {\n  var i = 1\n    , target\n    , key;\n\n  for (; i < arguments.length; i++) {\n    target = arguments[i];\n    for (key in target) {\n      if (Object.prototype.hasOwnProperty.call(target, key)) {\n        obj[key] = target[key];\n      }\n    }\n  }\n\n  return obj;\n}\n\n\n/**\n * Marked\n */\n\nfunction marked(src, opt, callback) {\n  if (callback || typeof opt === 'function') {\n    if (!callback) {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n\n    var highlight = opt.highlight\n      , tokens\n      , pending\n      , i = 0;\n\n    try {\n      tokens = Lexer.lex(src, opt)\n    } catch (e) {\n      return callback(e);\n    }\n\n    pending = tokens.length;\n\n    var done = function(err) {\n      if (err) {\n        opt.highlight = highlight;\n        return callback(err);\n      }\n\n      var out;\n\n      try {\n        out = Parser.parse(tokens, opt);\n      } catch (e) {\n        err = e;\n      }\n\n      opt.highlight = highlight;\n\n      return err\n        ? callback(err)\n        : callback(null, out);\n    };\n\n    if (!highlight || highlight.length < 3) {\n      return done();\n    }\n\n    delete opt.highlight;\n\n    if (!pending) return done();\n\n    for (; i < tokens.length; i++) {\n      (function(token) {\n        if (token.type !== 'code') {\n          return --pending || done();\n        }\n        return highlight(token.text, token.lang, function(err, code) {\n          if (err) return done(err);\n          if (code == null || code === token.text) {\n            return --pending || done();\n          }\n          token.text = code;\n          token.escaped = true;\n          --pending || done();\n        });\n      })(tokens[i]);\n    }\n\n    return;\n  }\n  try {\n    if (opt) opt = merge({}, marked.defaults, opt);\n    return Parser.parse(Lexer.lex(src, opt), opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/chjj/marked.';\n    if ((opt || marked.defaults).silent) {\n      return '<p>An error occured:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  merge(marked.defaults, opt);\n  return marked;\n};\n\nmarked.defaults = {\n  gfm: true,\n  tables: true,\n  breaks: false,\n  pedantic: false,\n  sanitize: false,\n  sanitizer: null,\n  mangle: true,\n  smartLists: false,\n  silent: false,\n  highlight: null,\n  langPrefix: 'lang-',\n  smartypants: false,\n  headerPrefix: '',\n  renderer: new Renderer,\n  xhtml: false\n};\n\n/**\n * Expose\n */\n\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\n\nmarked.Renderer = Renderer;\n\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\n\nmarked.InlineLexer = InlineLexer;\nmarked.inlineLexer = InlineLexer.output;\n\nmarked.parse = marked;\n\nif (typeof module !== 'undefined' && typeof exports === 'object') {\n  module.exports = marked;\n} else if (typeof define === 'function' && define.amd) {\n  define(function() { return marked; });\n} else {\n  this.marked = marked;\n}\n\n}).call(function() {\n  return this || (typeof window !== 'undefined' ? window : global);\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/marked/lib/marked.js\n// module id = 29\n// module chunks = 0","module.exports = \":host {\\n  height: 100vh;\\n  width: 100vw;\\n  overflow: hidden;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -ms-flex-direction: column;\\n      flex-direction: column; }\\n\\nfooter {\\n  width: 100%;\\n  background-color: #eee; }\\n\\nbutton {\\n  cursor: pointer; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.scss\n// module id = 31\n// module chunks = 0","module.exports = \"<header>\\r\\n\\t<!-- nav bar -->\\r\\n\\t<nav class=\\\"card card-inverse rounded-0 flex-row p-2\\\" style=\\\"background-color: #333; border-color: #333;\\\">\\r\\n\\t\\t<h3 class=\\\"navbar-brand p-0 m-0 mr-3 hidden-xs-down\\\" routerLink=\\\"/notes\\\">Ng2 Notes</h3>\\r\\n\\r\\n\\t\\t<!-- mobile buttons -->\\r\\n\\t\\t<button class=\\\"btn btn-default mr-auto\\\" type=\\\"button\\\" routerLink=\\\"/notes\\\"><i class=\\\"fa fa-chevron-left\\\"></i> Back</button>\\r\\n\\t</nav>\\r\\n</header>\\r\\n\\r\\n<main class=\\\"page-content\\\">\\r\\n\\t<div class=\\\"container\\\">\\r\\n\\t\\t<div class=\\\"card\\\">\\r\\n\\t\\t\\t<div class=\\\"card-block\\\">\\r\\n\\t\\t\\t\\t<div [innerHTML]=\\\"README\\\"></div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</main>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/about/about.component.html\n// module id = 32\n// module chunks = 0","module.exports = \"<router-outlet class=\\\"page\\\"></router-outlet>\\r\\n\\r\\n<footer class=\\\"footer mt-auto p-3\\\">\\r\\n\\t<div class=\\\"container text-center\\\">\\r\\n\\t\\t<span class=\\\"text-muted\\\">Created By <a href=\\\"http://www.rdfriedl.com\\\" target=\\\"_blank\\\">rdfriedl</a></span>\\r\\n\\t</div>\\r\\n</footer>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 33\n// module chunks = 0","module.exports = \"<header>\\r\\n\\t<!-- nav bar -->\\r\\n\\t<nav class=\\\"card card-inverse rounded-0 flex-row p-2\\\" style=\\\"background-color: #333; border-color: #333;\\\">\\r\\n\\t\\t<h3 class=\\\"navbar-brand p-0 m-0 mr-3 hidden-sm-down\\\" routerLink=\\\"/notes\\\">Ng2 Notes</h3>\\r\\n\\r\\n\\t\\t<!-- mobile buttons -->\\r\\n\\t\\t<button class=\\\"btn btn-default mr-auto\\\" type=\\\"button\\\" routerLink=\\\"/notes\\\"><i class=\\\"fa fa-chevron-left\\\"></i> Back</button>\\r\\n\\t\\t<button class=\\\"btn mx-auto hidden-md-up\\\" type=\\\"button\\\" (click)=\\\"toggleMobilePreview()\\\" [ngClass]=\\\"{'btn-primary': mobilePreview, 'btn-outline-primary': !mobilePreview}\\\"><i class=\\\"fa fa-eye\\\"></i> Preview</button>\\r\\n\\r\\n\\t\\t<!-- desktop buttons -->\\r\\n\\t\\t<button class=\\\"btn btn-success ml-auto\\\" type=\\\"submit\\\" [disabled]=\\\"!noteForm.form.valid\\\" form=\\\"new-note-form\\\"><i class=\\\"fa fa-check\\\"></i> <span>Save</span></button>\\r\\n\\t</nav>\\r\\n</header>\\r\\n\\r\\n<main class=\\\"page-content\\\">\\r\\n\\t<form id=\\\"new-note-form\\\" class=\\\"pt-3\\\" (ngSubmit)=\\\"saveNote()\\\" #noteForm=\\\"ngForm\\\">\\r\\n\\t\\t<div class=\\\"container\\\">\\r\\n\\t\\t\\t<div class=\\\"row\\\" *ngIf=\\\"!mobilePreview\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"col-md-6 col-sm-12\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" name=\\\"title\\\" class=\\\"form-control\\\" placeholder=\\\"Title\\\" [(ngModel)]=\\\"modal.title\\\" autocomplete=\\\"off\\\">\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t<textarea class=\\\"form-control\\\" name=\\\"content\\\" placeholder=\\\"Some relevant infomation\\\" [(ngModel)]=\\\"modal.content\\\" required style=\\\"height: 35vh;\\\" autocomplete=\\\"off\\\"></textarea>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"col-6 hidden-sm-down\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label>Preview</label>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"card\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card-header\\\" *ngIf=\\\"modal.title\\\">{{modal.title}}</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card-block\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card-text markdown\\\" [innerHTML]=\\\"modal.content | MarkdownToHtml\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"row\\\" *ngIf=\\\"mobilePreview\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"col-12\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"card\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"card-header\\\" *ngIf=\\\"modal.title\\\">{{modal.title}}</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"card-block\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card-text markdown\\\" [innerHTML]=\\\"modal.content | MarkdownToHtml\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</form>\\r\\n</main>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/edit-note/edit-note.component.html\n// module id = 34\n// module chunks = 0","module.exports = \"<header>\\r\\n\\t<!-- nav bar -->\\r\\n\\t<nav class=\\\"card card-inverse rounded-0 flex-row p-2\\\" style=\\\"background-color: #333; border-color: #333;\\\">\\r\\n\\t\\t<h3 class=\\\"navbar-brand p-0 m-0\\\" routerLink=\\\"/notes\\\">Ng2 Notes</h3>\\r\\n\\r\\n\\t\\t<!-- mobile buttons -->\\r\\n\\t\\t<div class=\\\"ml-auto hidden-sm-up\\\">\\r\\n\\t\\t\\t<button class=\\\"btn btn-sm btn-outline-info hidden-sm-up p-1\\\" routerLink=\\\"/about\\\" routerLinkActive=\\\"active\\\"><i class=\\\"fa fa-info fa-fw fa-2x\\\"></i></button>\\r\\n\\t\\t\\t<button class=\\\"btn btn-sm btn-outline-success hidden-sm-up p-1\\\" routerLink=\\\"/new\\\" routerLinkActive=\\\"active\\\"><i class=\\\"fa fa-plus fa-fw fa-2x\\\"></i></button>\\r\\n\\t\\t</div>\\r\\n\\r\\n\\t\\t<!-- desktop buttons -->\\r\\n\\t\\t<div class=\\\"ml-auto hidden-xs-down\\\">\\r\\n\\t\\t\\t<button class=\\\"btn btn-outline-info\\\" routerLink=\\\"/about\\\" routerLinkActive=\\\"active\\\"><i class=\\\"fa fa-info-circle\\\"></i> About</button>\\r\\n\\t\\t\\t<button class=\\\"btn btn-outline-success\\\" routerLink=\\\"/new\\\" routerLinkActive=\\\"active\\\"><i class=\\\"fa fa-plus\\\"></i> New Note</button>\\r\\n\\t\\t</div>\\r\\n\\t</nav>\\r\\n\\r\\n\\t<!-- selection toolbar -->\\r\\n\\t<div class=\\\"card card-primary fixed-top flex-row rounded-0 p-2\\\" [hidden]=\\\"selected.length == 0\\\">\\r\\n\\t\\t<button class=\\\"btn mr-auto\\\" (click)=\\\"clearSelection()\\\">{{selected.length}} Selected</button>\\r\\n\\r\\n\\t\\t<div class=\\\"btn-group ml-auto\\\">\\r\\n\\t\\t\\t<!-- <button class=\\\"btn btn-success\\\" (click)=\\\"clearSelection()\\\"><i class=\\\"fa fa-check\\\"></i><span class=\\\"hidden-xs-down\\\"> Done</span></button> -->\\r\\n\\t\\t\\t<button class=\\\"btn btn-info\\\" *ngIf=\\\"selected.length == 1\\\" (click)=\\\"editNote(selected[0])\\\"><i class=\\\"fa fa-pencil\\\"></i><span class=\\\"hidden-xs-down\\\"> Edit</span></button>\\r\\n\\t\\t\\t<button class=\\\"btn btn-danger\\\" (click)=\\\"deleteNotes(selected)\\\"><i class=\\\"fa fa-trash\\\"></i><span class=\\\"hidden-xs-down\\\"> Delete</span></button>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</header>\\r\\n\\r\\n<main class=\\\"page-content\\\">\\r\\n\\t<div class=\\\"container p-3\\\">\\r\\n\\t\\t<div class=\\\"card-columns\\\">\\r\\n\\t\\t\\t<div class=\\\"card mb-3\\\" *ngFor=\\\"let note of notes\\\" [ngClass]=\\\"{'card-outline-primary': selected.includes(note)}\\\" (click)=\\\"toggleSelected(note)\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"card-header\\\" *ngIf=\\\"note.title\\\">{{note.title}}</div>\\r\\n\\t\\t\\t\\t<div class=\\\"card-block\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"card-text markdown\\\" [innerHTML]=\\\"note.content | MarkdownToHtml\\\"></div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\r\\n\\t\\t<div class=\\\"text-center\\\" *ngIf=\\\"!notes.length\\\">\\r\\n\\t\\t\\t<h3 class=\\\"text-muted\\\">Looks like you dont have any notes</h3>\\r\\n\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-success\\\" routerLink=\\\"/new\\\">Create One?</button>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</main>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/home.component.html\n// module id = 35\n// module chunks = 0","module.exports = \"<header>\\r\\n\\t<!-- nav bar -->\\r\\n\\t<nav class=\\\"card card-inverse rounded-0 flex-row p-2\\\" style=\\\"background-color: #333; border-color: #333;\\\">\\r\\n\\t\\t<h3 class=\\\"navbar-brand p-0 m-0 mr-3 hidden-xs-down\\\" routerLink=\\\"/notes\\\">Ng2 Notes</h3>\\r\\n\\r\\n\\t\\t<!-- mobile buttons -->\\r\\n\\t\\t<button class=\\\"btn btn-default mr-auto\\\" type=\\\"button\\\" routerLink=\\\"/notes\\\"><i class=\\\"fa fa-chevron-left\\\"></i> Back</button>\\r\\n\\t\\t<button class=\\\"btn mx-auto hidden-sm-up\\\" type=\\\"button\\\" (click)=\\\"toggleMobilePreview()\\\" [ngClass]=\\\"{'btn-primary': mobilePreview, 'btn-outline-primary': !mobilePreview}\\\"><i class=\\\"fa fa-eye\\\"></i> Preview</button>\\r\\n\\r\\n\\t\\t<!-- desktop buttons -->\\r\\n\\t\\t<button class=\\\"btn btn-success ml-auto\\\" type=\\\"submit\\\" [disabled]=\\\"!noteForm.form.valid\\\" form=\\\"new-note-form\\\"><i class=\\\"fa fa-check\\\"></i> <span>Save</span></button>\\r\\n\\t</nav>\\r\\n</header>\\r\\n\\r\\n<main class=\\\"page-content\\\">\\r\\n\\t<form id=\\\"new-note-form\\\" class=\\\"pt-3\\\" (ngSubmit)=\\\"createNote()\\\" #noteForm=\\\"ngForm\\\">\\r\\n\\t\\t<div class=\\\"container\\\">\\r\\n\\t\\t\\t<div class=\\\"row\\\" *ngIf=\\\"!mobilePreview\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"col-md-6 col-sm-12\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" name=\\\"title\\\" class=\\\"form-control\\\" placeholder=\\\"Title\\\" [(ngModel)]=\\\"note.title\\\" autocomplete=\\\"off\\\">\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t<textarea class=\\\"form-control\\\" name=\\\"content\\\" placeholder=\\\"Some relevant infomation\\\" [(ngModel)]=\\\"note.content\\\" required style=\\\"height: 35vh;\\\" autocomplete=\\\"off\\\"></textarea>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"col-6 hidden-sm-down\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t<label>Preview</label>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"card\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card-header\\\" *ngIf=\\\"note.title\\\">{{note.title}}</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card-block\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card-text markdown\\\" [innerHTML]=\\\"note.content | MarkdownToHtml\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"row\\\" *ngIf=\\\"mobilePreview\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"col-12\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"card\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"card-header\\\" *ngIf=\\\"note.title\\\">{{note.title}}</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"card-block\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"card-text markdown\\\" [innerHTML]=\\\"note.content | MarkdownToHtml\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</form>\\r\\n</main>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/note-form/note-form.component.html\n// module id = 36\n// module chunks = 0","module.exports = Dexie;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"Dexie\"\n// module id = 37\n// module chunks = 0","module.exports = ng.forms;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ng.forms\"\n// module id = 39\n// module chunks = 0","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport { AppModule } from './app/app.module';\r\nimport './styles/styles.scss';\r\n\r\n// depending on the env mode, enable prod mode or add debugging modules\r\nif (process.env.ENV === 'build') {\r\n\tenableProdMode();\r\n}\r\n\r\nexport function main() {\r\n\treturn platformBrowserDynamic().bootstrapModule(AppModule).then(function(MODULE_REF) {   if (module[\"hot\"]) {     module[\"hot\"][\"accept\"]();          if (MODULE_REF.instance[\"hmrOnInit\"]) {       module[\"hot\"][\"data\"] && MODULE_REF.instance[\"hmrOnInit\"](module[\"hot\"][\"data\"]);     }     if (MODULE_REF.instance[\"hmrOnStatus\"]) {       module[\"hot\"][\"apply\"](function(status) {         MODULE_REF.instance[\"hmrOnStatus\"](status);       });     }     if (MODULE_REF.instance[\"hmrOnCheck\"]) {       module[\"hot\"][\"check\"](function(err, outdatedModules) {         MODULE_REF.instance[\"hmrOnCheck\"](err, outdatedModules);       });     }     if (MODULE_REF.instance[\"hmrOnDecline\"]) {       module[\"hot\"][\"decline\"](function(dependencies) {         MODULE_REF.instance[\"hmrOnDecline\"](dependencies);       });     }     module[\"hot\"][\"dispose\"](function(store) {       MODULE_REF.instance[\"hmrOnDestroy\"] && MODULE_REF.instance[\"hmrOnDestroy\"](store);       MODULE_REF.destroy();       MODULE_REF.instance[\"hmrAfterDestroy\"] && MODULE_REF.instance[\"hmrAfterDestroy\"](store);     });   }   return MODULE_REF; });\r\n}\r\n\r\nif (document.readyState === 'complete') {\r\n\tmain();\r\n}\r\nelse {\r\n\tdocument.addEventListener('DOMContentLoaded', main);\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/@angularclass/hmr-loader!./~/tslint-loader!./src/main.ts"],"sourceRoot":""}